/*
Weavr Multi Product API

Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for your customers.  # Authentication Each request to the Multi API must include an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `auth_token` that represents the user for whom the request is being executed. 

API version: 3.32.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weavr

import (
	"encoding/json"
)

// checks if the TransferCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransferCreateRequest{}

// TransferCreateRequest struct for TransferCreateRequest
type TransferCreateRequest struct {
	// The profile Id which a specific identity, instrument or transaction type is linked to.  Profiles contain configuration and determine behavioral aspects of the newly created transaction, for example, fees that may apply.  You can have one or more profiles linked to your application, and these can be used to drive different behaviors according to your product's needs.  Profile Ids can be found in the Multi Portal, in the API Credentials page. 
	ProfileId interface{} `json:"profileId"`
	// The tag field is a custom field that can be used to search and filter.
	Tag interface{} `json:"tag,omitempty"`
	// The managed account or managed card from where the funds will be transferred.
	Source InstrumentId `json:"source"`
	// The managed account or managed card to where the funds will be transferred.
	Destination InstrumentId `json:"destination"`
	// The amount, in same currency as the source and destination instruments, to be transferred to the destination (exclusive of any fee amount that may be specified in the profile).
	DestinationAmount CurrencyAmount `json:"destinationAmount"`
}

// NewTransferCreateRequest instantiates a new TransferCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferCreateRequest(profileId interface{}, source InstrumentId, destination InstrumentId, destinationAmount CurrencyAmount) *TransferCreateRequest {
	this := TransferCreateRequest{}
	this.ProfileId = profileId
	this.Source = source
	this.Destination = destination
	this.DestinationAmount = destinationAmount
	return &this
}

// NewTransferCreateRequestWithDefaults instantiates a new TransferCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferCreateRequestWithDefaults() *TransferCreateRequest {
	this := TransferCreateRequest{}
	return &this
}

// GetProfileId returns the ProfileId field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *TransferCreateRequest) GetProfileId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransferCreateRequest) GetProfileIdOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return &o.ProfileId, true
}

// SetProfileId sets field value
func (o *TransferCreateRequest) SetProfileId(v interface{}) {
	o.ProfileId = v
}

// GetTag returns the Tag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TransferCreateRequest) GetTag() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransferCreateRequest) GetTagOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return &o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *TransferCreateRequest) HasTag() bool {
	if o != nil && IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given interface{} and assigns it to the Tag field.
func (o *TransferCreateRequest) SetTag(v interface{}) {
	o.Tag = v
}

// GetSource returns the Source field value
func (o *TransferCreateRequest) GetSource() InstrumentId {
	if o == nil {
		var ret InstrumentId
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *TransferCreateRequest) GetSourceOk() (*InstrumentId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *TransferCreateRequest) SetSource(v InstrumentId) {
	o.Source = v
}

// GetDestination returns the Destination field value
func (o *TransferCreateRequest) GetDestination() InstrumentId {
	if o == nil {
		var ret InstrumentId
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *TransferCreateRequest) GetDestinationOk() (*InstrumentId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Destination, true
}

// SetDestination sets field value
func (o *TransferCreateRequest) SetDestination(v InstrumentId) {
	o.Destination = v
}

// GetDestinationAmount returns the DestinationAmount field value
func (o *TransferCreateRequest) GetDestinationAmount() CurrencyAmount {
	if o == nil {
		var ret CurrencyAmount
		return ret
	}

	return o.DestinationAmount
}

// GetDestinationAmountOk returns a tuple with the DestinationAmount field value
// and a boolean to check if the value has been set.
func (o *TransferCreateRequest) GetDestinationAmountOk() (*CurrencyAmount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationAmount, true
}

// SetDestinationAmount sets field value
func (o *TransferCreateRequest) SetDestinationAmount(v CurrencyAmount) {
	o.DestinationAmount = v
}

func (o TransferCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransferCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ProfileId != nil {
		toSerialize["profileId"] = o.ProfileId
	}
	if o.Tag != nil {
		toSerialize["tag"] = o.Tag
	}
	toSerialize["source"] = o.Source
	toSerialize["destination"] = o.Destination
	toSerialize["destinationAmount"] = o.DestinationAmount
	return toSerialize, nil
}

type NullableTransferCreateRequest struct {
	value *TransferCreateRequest
	isSet bool
}

func (v NullableTransferCreateRequest) Get() *TransferCreateRequest {
	return v.value
}

func (v *NullableTransferCreateRequest) Set(val *TransferCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferCreateRequest(val *TransferCreateRequest) *NullableTransferCreateRequest {
	return &NullableTransferCreateRequest{value: val, isSet: true}
}

func (v NullableTransferCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


