/*
Weavr Multi Product API

Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for your customers.  # Authentication Each request to the Multi API must include an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `auth_token` that represents the user for whom the request is being executed. 

API version: 3.32.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weavr

import (
	"encoding/json"
)

// checks if the LostPasswordInitiateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LostPasswordInitiateRequest{}

// LostPasswordInitiateRequest struct for LostPasswordInitiateRequest
type LostPasswordInitiateRequest struct {
	// E-mail Address of the user
	Email interface{} `json:"email"`
}

// NewLostPasswordInitiateRequest instantiates a new LostPasswordInitiateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLostPasswordInitiateRequest(email interface{}) *LostPasswordInitiateRequest {
	this := LostPasswordInitiateRequest{}
	this.Email = email
	return &this
}

// NewLostPasswordInitiateRequestWithDefaults instantiates a new LostPasswordInitiateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLostPasswordInitiateRequestWithDefaults() *LostPasswordInitiateRequest {
	this := LostPasswordInitiateRequest{}
	return &this
}

// GetEmail returns the Email field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *LostPasswordInitiateRequest) GetEmail() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LostPasswordInitiateRequest) GetEmailOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *LostPasswordInitiateRequest) SetEmail(v interface{}) {
	o.Email = v
}

func (o LostPasswordInitiateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LostPasswordInitiateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	return toSerialize, nil
}

type NullableLostPasswordInitiateRequest struct {
	value *LostPasswordInitiateRequest
	isSet bool
}

func (v NullableLostPasswordInitiateRequest) Get() *LostPasswordInitiateRequest {
	return v.value
}

func (v *NullableLostPasswordInitiateRequest) Set(val *LostPasswordInitiateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLostPasswordInitiateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLostPasswordInitiateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLostPasswordInitiateRequest(val *LostPasswordInitiateRequest) *NullableLostPasswordInitiateRequest {
	return &NullableLostPasswordInitiateRequest{value: val, isSet: true}
}

func (v NullableLostPasswordInitiateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLostPasswordInitiateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


