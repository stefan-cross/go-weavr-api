/*
Weavr Multi Product API

Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for your customers.  # Authentication Each request to the Multi API must include an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `auth_token` that represents the user for whom the request is being executed. 

API version: 3.32.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weavr

import (
	"encoding/json"
)

// checks if the ManagedCardUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedCardUpdateRequest{}

// ManagedCardUpdateRequest struct for ManagedCardUpdateRequest
type ManagedCardUpdateRequest struct {
	// The tag field is a custom field that can be used to search and filter.
	Tag interface{} `json:"tag,omitempty"`
	// Updates the friendly name of the card. Leave blank if no change is needed.
	FriendlyName interface{} `json:"friendlyName,omitempty"`
	// The card holder's name for the card.  This may be verified by merchants when the card is used online. For Physical cards, this field will be printed on the card. The maximum characters allowed will depend on the design chosen and will be provided to you by Weavr when setting up your plastic cards. 
	NameOnCard interface{} `json:"nameOnCard,omitempty"`
	// Line 2 of the 'name on card' field. For Physical cards, this field will be printed on the card. The maximum characters allowed will depend on the design chosen and will be provided to you by Weavr when setting up your plastic cards.
	NameOnCardLine2 interface{} `json:"nameOnCardLine2,omitempty"`
	// The mobile number including country code of the card holder, needed in case a 3DS challenge is required.
	CardholderMobileNumber interface{} `json:"cardholderMobileNumber,omitempty"`
	// The billing address of the card holder. Merchants may request the billing address to be checked for online purchases.
	BillingAddress *Address `json:"billingAddress,omitempty"`
	// The delivery address set for the card holder. This is only applicable for physical cards.
	DeliveryAddress *DeliveryAddress `json:"deliveryAddress,omitempty"`
	DeliveryMethod *DeliveryMethod `json:"deliveryMethod,omitempty"`
	DigitalWallets *DigitalWallets `json:"digitalWallets,omitempty"`
	// Default decision for auth forwarding on timeout
	AuthForwardingDefaultTimeoutDecision interface{} `json:"authForwardingDefaultTimeoutDecision,omitempty"`
}

// NewManagedCardUpdateRequest instantiates a new ManagedCardUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedCardUpdateRequest() *ManagedCardUpdateRequest {
	this := ManagedCardUpdateRequest{}
	return &this
}

// NewManagedCardUpdateRequestWithDefaults instantiates a new ManagedCardUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedCardUpdateRequestWithDefaults() *ManagedCardUpdateRequest {
	this := ManagedCardUpdateRequest{}
	return &this
}

// GetTag returns the Tag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedCardUpdateRequest) GetTag() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedCardUpdateRequest) GetTagOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return &o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *ManagedCardUpdateRequest) HasTag() bool {
	if o != nil && IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given interface{} and assigns it to the Tag field.
func (o *ManagedCardUpdateRequest) SetTag(v interface{}) {
	o.Tag = v
}

// GetFriendlyName returns the FriendlyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedCardUpdateRequest) GetFriendlyName() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.FriendlyName
}

// GetFriendlyNameOk returns a tuple with the FriendlyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedCardUpdateRequest) GetFriendlyNameOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FriendlyName) {
		return nil, false
	}
	return &o.FriendlyName, true
}

// HasFriendlyName returns a boolean if a field has been set.
func (o *ManagedCardUpdateRequest) HasFriendlyName() bool {
	if o != nil && IsNil(o.FriendlyName) {
		return true
	}

	return false
}

// SetFriendlyName gets a reference to the given interface{} and assigns it to the FriendlyName field.
func (o *ManagedCardUpdateRequest) SetFriendlyName(v interface{}) {
	o.FriendlyName = v
}

// GetNameOnCard returns the NameOnCard field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedCardUpdateRequest) GetNameOnCard() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.NameOnCard
}

// GetNameOnCardOk returns a tuple with the NameOnCard field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedCardUpdateRequest) GetNameOnCardOk() (*interface{}, bool) {
	if o == nil || IsNil(o.NameOnCard) {
		return nil, false
	}
	return &o.NameOnCard, true
}

// HasNameOnCard returns a boolean if a field has been set.
func (o *ManagedCardUpdateRequest) HasNameOnCard() bool {
	if o != nil && IsNil(o.NameOnCard) {
		return true
	}

	return false
}

// SetNameOnCard gets a reference to the given interface{} and assigns it to the NameOnCard field.
func (o *ManagedCardUpdateRequest) SetNameOnCard(v interface{}) {
	o.NameOnCard = v
}

// GetNameOnCardLine2 returns the NameOnCardLine2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedCardUpdateRequest) GetNameOnCardLine2() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.NameOnCardLine2
}

// GetNameOnCardLine2Ok returns a tuple with the NameOnCardLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedCardUpdateRequest) GetNameOnCardLine2Ok() (*interface{}, bool) {
	if o == nil || IsNil(o.NameOnCardLine2) {
		return nil, false
	}
	return &o.NameOnCardLine2, true
}

// HasNameOnCardLine2 returns a boolean if a field has been set.
func (o *ManagedCardUpdateRequest) HasNameOnCardLine2() bool {
	if o != nil && IsNil(o.NameOnCardLine2) {
		return true
	}

	return false
}

// SetNameOnCardLine2 gets a reference to the given interface{} and assigns it to the NameOnCardLine2 field.
func (o *ManagedCardUpdateRequest) SetNameOnCardLine2(v interface{}) {
	o.NameOnCardLine2 = v
}

// GetCardholderMobileNumber returns the CardholderMobileNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedCardUpdateRequest) GetCardholderMobileNumber() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CardholderMobileNumber
}

// GetCardholderMobileNumberOk returns a tuple with the CardholderMobileNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedCardUpdateRequest) GetCardholderMobileNumberOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CardholderMobileNumber) {
		return nil, false
	}
	return &o.CardholderMobileNumber, true
}

// HasCardholderMobileNumber returns a boolean if a field has been set.
func (o *ManagedCardUpdateRequest) HasCardholderMobileNumber() bool {
	if o != nil && IsNil(o.CardholderMobileNumber) {
		return true
	}

	return false
}

// SetCardholderMobileNumber gets a reference to the given interface{} and assigns it to the CardholderMobileNumber field.
func (o *ManagedCardUpdateRequest) SetCardholderMobileNumber(v interface{}) {
	o.CardholderMobileNumber = v
}

// GetBillingAddress returns the BillingAddress field value if set, zero value otherwise.
func (o *ManagedCardUpdateRequest) GetBillingAddress() Address {
	if o == nil || IsNil(o.BillingAddress) {
		var ret Address
		return ret
	}
	return *o.BillingAddress
}

// GetBillingAddressOk returns a tuple with the BillingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedCardUpdateRequest) GetBillingAddressOk() (*Address, bool) {
	if o == nil || IsNil(o.BillingAddress) {
		return nil, false
	}
	return o.BillingAddress, true
}

// HasBillingAddress returns a boolean if a field has been set.
func (o *ManagedCardUpdateRequest) HasBillingAddress() bool {
	if o != nil && !IsNil(o.BillingAddress) {
		return true
	}

	return false
}

// SetBillingAddress gets a reference to the given Address and assigns it to the BillingAddress field.
func (o *ManagedCardUpdateRequest) SetBillingAddress(v Address) {
	o.BillingAddress = &v
}

// GetDeliveryAddress returns the DeliveryAddress field value if set, zero value otherwise.
func (o *ManagedCardUpdateRequest) GetDeliveryAddress() DeliveryAddress {
	if o == nil || IsNil(o.DeliveryAddress) {
		var ret DeliveryAddress
		return ret
	}
	return *o.DeliveryAddress
}

// GetDeliveryAddressOk returns a tuple with the DeliveryAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedCardUpdateRequest) GetDeliveryAddressOk() (*DeliveryAddress, bool) {
	if o == nil || IsNil(o.DeliveryAddress) {
		return nil, false
	}
	return o.DeliveryAddress, true
}

// HasDeliveryAddress returns a boolean if a field has been set.
func (o *ManagedCardUpdateRequest) HasDeliveryAddress() bool {
	if o != nil && !IsNil(o.DeliveryAddress) {
		return true
	}

	return false
}

// SetDeliveryAddress gets a reference to the given DeliveryAddress and assigns it to the DeliveryAddress field.
func (o *ManagedCardUpdateRequest) SetDeliveryAddress(v DeliveryAddress) {
	o.DeliveryAddress = &v
}

// GetDeliveryMethod returns the DeliveryMethod field value if set, zero value otherwise.
func (o *ManagedCardUpdateRequest) GetDeliveryMethod() DeliveryMethod {
	if o == nil || IsNil(o.DeliveryMethod) {
		var ret DeliveryMethod
		return ret
	}
	return *o.DeliveryMethod
}

// GetDeliveryMethodOk returns a tuple with the DeliveryMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedCardUpdateRequest) GetDeliveryMethodOk() (*DeliveryMethod, bool) {
	if o == nil || IsNil(o.DeliveryMethod) {
		return nil, false
	}
	return o.DeliveryMethod, true
}

// HasDeliveryMethod returns a boolean if a field has been set.
func (o *ManagedCardUpdateRequest) HasDeliveryMethod() bool {
	if o != nil && !IsNil(o.DeliveryMethod) {
		return true
	}

	return false
}

// SetDeliveryMethod gets a reference to the given DeliveryMethod and assigns it to the DeliveryMethod field.
func (o *ManagedCardUpdateRequest) SetDeliveryMethod(v DeliveryMethod) {
	o.DeliveryMethod = &v
}

// GetDigitalWallets returns the DigitalWallets field value if set, zero value otherwise.
func (o *ManagedCardUpdateRequest) GetDigitalWallets() DigitalWallets {
	if o == nil || IsNil(o.DigitalWallets) {
		var ret DigitalWallets
		return ret
	}
	return *o.DigitalWallets
}

// GetDigitalWalletsOk returns a tuple with the DigitalWallets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedCardUpdateRequest) GetDigitalWalletsOk() (*DigitalWallets, bool) {
	if o == nil || IsNil(o.DigitalWallets) {
		return nil, false
	}
	return o.DigitalWallets, true
}

// HasDigitalWallets returns a boolean if a field has been set.
func (o *ManagedCardUpdateRequest) HasDigitalWallets() bool {
	if o != nil && !IsNil(o.DigitalWallets) {
		return true
	}

	return false
}

// SetDigitalWallets gets a reference to the given DigitalWallets and assigns it to the DigitalWallets field.
func (o *ManagedCardUpdateRequest) SetDigitalWallets(v DigitalWallets) {
	o.DigitalWallets = &v
}

// GetAuthForwardingDefaultTimeoutDecision returns the AuthForwardingDefaultTimeoutDecision field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedCardUpdateRequest) GetAuthForwardingDefaultTimeoutDecision() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.AuthForwardingDefaultTimeoutDecision
}

// GetAuthForwardingDefaultTimeoutDecisionOk returns a tuple with the AuthForwardingDefaultTimeoutDecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedCardUpdateRequest) GetAuthForwardingDefaultTimeoutDecisionOk() (*interface{}, bool) {
	if o == nil || IsNil(o.AuthForwardingDefaultTimeoutDecision) {
		return nil, false
	}
	return &o.AuthForwardingDefaultTimeoutDecision, true
}

// HasAuthForwardingDefaultTimeoutDecision returns a boolean if a field has been set.
func (o *ManagedCardUpdateRequest) HasAuthForwardingDefaultTimeoutDecision() bool {
	if o != nil && IsNil(o.AuthForwardingDefaultTimeoutDecision) {
		return true
	}

	return false
}

// SetAuthForwardingDefaultTimeoutDecision gets a reference to the given interface{} and assigns it to the AuthForwardingDefaultTimeoutDecision field.
func (o *ManagedCardUpdateRequest) SetAuthForwardingDefaultTimeoutDecision(v interface{}) {
	o.AuthForwardingDefaultTimeoutDecision = v
}

func (o ManagedCardUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedCardUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Tag != nil {
		toSerialize["tag"] = o.Tag
	}
	if o.FriendlyName != nil {
		toSerialize["friendlyName"] = o.FriendlyName
	}
	if o.NameOnCard != nil {
		toSerialize["nameOnCard"] = o.NameOnCard
	}
	if o.NameOnCardLine2 != nil {
		toSerialize["nameOnCardLine2"] = o.NameOnCardLine2
	}
	if o.CardholderMobileNumber != nil {
		toSerialize["cardholderMobileNumber"] = o.CardholderMobileNumber
	}
	if !IsNil(o.BillingAddress) {
		toSerialize["billingAddress"] = o.BillingAddress
	}
	if !IsNil(o.DeliveryAddress) {
		toSerialize["deliveryAddress"] = o.DeliveryAddress
	}
	if !IsNil(o.DeliveryMethod) {
		toSerialize["deliveryMethod"] = o.DeliveryMethod
	}
	if !IsNil(o.DigitalWallets) {
		toSerialize["digitalWallets"] = o.DigitalWallets
	}
	if o.AuthForwardingDefaultTimeoutDecision != nil {
		toSerialize["authForwardingDefaultTimeoutDecision"] = o.AuthForwardingDefaultTimeoutDecision
	}
	return toSerialize, nil
}

type NullableManagedCardUpdateRequest struct {
	value *ManagedCardUpdateRequest
	isSet bool
}

func (v NullableManagedCardUpdateRequest) Get() *ManagedCardUpdateRequest {
	return v.value
}

func (v *NullableManagedCardUpdateRequest) Set(val *ManagedCardUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedCardUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedCardUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedCardUpdateRequest(val *ManagedCardUpdateRequest) *NullableManagedCardUpdateRequest {
	return &NullableManagedCardUpdateRequest{value: val, isSet: true}
}

func (v NullableManagedCardUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedCardUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


