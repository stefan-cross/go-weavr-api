/*
Weavr Multi Product API

Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for your customers.  # Authentication Each request to the Multi API must include an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `auth_token` that represents the user for whom the request is being executed. 

API version: 3.32.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weavr

import (
	"encoding/json"
)

// checks if the ConsumerCreateRequestRootUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConsumerCreateRequestRootUser{}

// ConsumerCreateRequestRootUser The root user represents the identity.  Root users need to verify their email address and mobile number, as well as complete KYC, as part of the Consumer's due diligence process. 
type ConsumerCreateRequestRootUser struct {
	// The first name of the root user.
	Name interface{} `json:"name"`
	// The last name of the root user.
	Surname interface{} `json:"surname"`
	// E-mail Address of the user
	Email interface{} `json:"email"`
	Mobile Mobile `json:"mobile"`
	// Date of birth of the consumer root user.
	DateOfBirth Date `json:"dateOfBirth"`
	// Deprecated
	Occupation *Occupation `json:"occupation,omitempty"`
	// Address of the consumer root user.
	Address *AddressWithNoRequiredFields `json:"address,omitempty"`
	// Place of birth of the consumer root user.
	PlaceOfBirth interface{} `json:"placeOfBirth,omitempty"`
	// Nationality of the user - using ISO 3166 alpha-2.
	Nationality interface{} `json:"nationality,omitempty"`
}

// NewConsumerCreateRequestRootUser instantiates a new ConsumerCreateRequestRootUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsumerCreateRequestRootUser(name interface{}, surname interface{}, email interface{}, mobile Mobile, dateOfBirth Date) *ConsumerCreateRequestRootUser {
	this := ConsumerCreateRequestRootUser{}
	this.Name = name
	this.Surname = surname
	this.Email = email
	this.Mobile = mobile
	this.DateOfBirth = dateOfBirth
	return &this
}

// NewConsumerCreateRequestRootUserWithDefaults instantiates a new ConsumerCreateRequestRootUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsumerCreateRequestRootUserWithDefaults() *ConsumerCreateRequestRootUser {
	this := ConsumerCreateRequestRootUser{}
	return &this
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ConsumerCreateRequestRootUser) GetName() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConsumerCreateRequestRootUser) GetNameOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ConsumerCreateRequestRootUser) SetName(v interface{}) {
	o.Name = v
}

// GetSurname returns the Surname field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ConsumerCreateRequestRootUser) GetSurname() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Surname
}

// GetSurnameOk returns a tuple with the Surname field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConsumerCreateRequestRootUser) GetSurnameOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Surname) {
		return nil, false
	}
	return &o.Surname, true
}

// SetSurname sets field value
func (o *ConsumerCreateRequestRootUser) SetSurname(v interface{}) {
	o.Surname = v
}

// GetEmail returns the Email field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ConsumerCreateRequestRootUser) GetEmail() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConsumerCreateRequestRootUser) GetEmailOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *ConsumerCreateRequestRootUser) SetEmail(v interface{}) {
	o.Email = v
}

// GetMobile returns the Mobile field value
func (o *ConsumerCreateRequestRootUser) GetMobile() Mobile {
	if o == nil {
		var ret Mobile
		return ret
	}

	return o.Mobile
}

// GetMobileOk returns a tuple with the Mobile field value
// and a boolean to check if the value has been set.
func (o *ConsumerCreateRequestRootUser) GetMobileOk() (*Mobile, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mobile, true
}

// SetMobile sets field value
func (o *ConsumerCreateRequestRootUser) SetMobile(v Mobile) {
	o.Mobile = v
}

// GetDateOfBirth returns the DateOfBirth field value
func (o *ConsumerCreateRequestRootUser) GetDateOfBirth() Date {
	if o == nil {
		var ret Date
		return ret
	}

	return o.DateOfBirth
}

// GetDateOfBirthOk returns a tuple with the DateOfBirth field value
// and a boolean to check if the value has been set.
func (o *ConsumerCreateRequestRootUser) GetDateOfBirthOk() (*Date, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateOfBirth, true
}

// SetDateOfBirth sets field value
func (o *ConsumerCreateRequestRootUser) SetDateOfBirth(v Date) {
	o.DateOfBirth = v
}

// GetOccupation returns the Occupation field value if set, zero value otherwise.
// Deprecated
func (o *ConsumerCreateRequestRootUser) GetOccupation() Occupation {
	if o == nil || IsNil(o.Occupation) {
		var ret Occupation
		return ret
	}
	return *o.Occupation
}

// GetOccupationOk returns a tuple with the Occupation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ConsumerCreateRequestRootUser) GetOccupationOk() (*Occupation, bool) {
	if o == nil || IsNil(o.Occupation) {
		return nil, false
	}
	return o.Occupation, true
}

// HasOccupation returns a boolean if a field has been set.
func (o *ConsumerCreateRequestRootUser) HasOccupation() bool {
	if o != nil && !IsNil(o.Occupation) {
		return true
	}

	return false
}

// SetOccupation gets a reference to the given Occupation and assigns it to the Occupation field.
// Deprecated
func (o *ConsumerCreateRequestRootUser) SetOccupation(v Occupation) {
	o.Occupation = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *ConsumerCreateRequestRootUser) GetAddress() AddressWithNoRequiredFields {
	if o == nil || IsNil(o.Address) {
		var ret AddressWithNoRequiredFields
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumerCreateRequestRootUser) GetAddressOk() (*AddressWithNoRequiredFields, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *ConsumerCreateRequestRootUser) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given AddressWithNoRequiredFields and assigns it to the Address field.
func (o *ConsumerCreateRequestRootUser) SetAddress(v AddressWithNoRequiredFields) {
	o.Address = &v
}

// GetPlaceOfBirth returns the PlaceOfBirth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConsumerCreateRequestRootUser) GetPlaceOfBirth() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.PlaceOfBirth
}

// GetPlaceOfBirthOk returns a tuple with the PlaceOfBirth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConsumerCreateRequestRootUser) GetPlaceOfBirthOk() (*interface{}, bool) {
	if o == nil || IsNil(o.PlaceOfBirth) {
		return nil, false
	}
	return &o.PlaceOfBirth, true
}

// HasPlaceOfBirth returns a boolean if a field has been set.
func (o *ConsumerCreateRequestRootUser) HasPlaceOfBirth() bool {
	if o != nil && IsNil(o.PlaceOfBirth) {
		return true
	}

	return false
}

// SetPlaceOfBirth gets a reference to the given interface{} and assigns it to the PlaceOfBirth field.
func (o *ConsumerCreateRequestRootUser) SetPlaceOfBirth(v interface{}) {
	o.PlaceOfBirth = v
}

// GetNationality returns the Nationality field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConsumerCreateRequestRootUser) GetNationality() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Nationality
}

// GetNationalityOk returns a tuple with the Nationality field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConsumerCreateRequestRootUser) GetNationalityOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Nationality) {
		return nil, false
	}
	return &o.Nationality, true
}

// HasNationality returns a boolean if a field has been set.
func (o *ConsumerCreateRequestRootUser) HasNationality() bool {
	if o != nil && IsNil(o.Nationality) {
		return true
	}

	return false
}

// SetNationality gets a reference to the given interface{} and assigns it to the Nationality field.
func (o *ConsumerCreateRequestRootUser) SetNationality(v interface{}) {
	o.Nationality = v
}

func (o ConsumerCreateRequestRootUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConsumerCreateRequestRootUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Surname != nil {
		toSerialize["surname"] = o.Surname
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	toSerialize["mobile"] = o.Mobile
	toSerialize["dateOfBirth"] = o.DateOfBirth
	if !IsNil(o.Occupation) {
		toSerialize["occupation"] = o.Occupation
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if o.PlaceOfBirth != nil {
		toSerialize["placeOfBirth"] = o.PlaceOfBirth
	}
	if o.Nationality != nil {
		toSerialize["nationality"] = o.Nationality
	}
	return toSerialize, nil
}

type NullableConsumerCreateRequestRootUser struct {
	value *ConsumerCreateRequestRootUser
	isSet bool
}

func (v NullableConsumerCreateRequestRootUser) Get() *ConsumerCreateRequestRootUser {
	return v.value
}

func (v *NullableConsumerCreateRequestRootUser) Set(val *ConsumerCreateRequestRootUser) {
	v.value = val
	v.isSet = true
}

func (v NullableConsumerCreateRequestRootUser) IsSet() bool {
	return v.isSet
}

func (v *NullableConsumerCreateRequestRootUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsumerCreateRequestRootUser(val *ConsumerCreateRequestRootUser) *NullableConsumerCreateRequestRootUser {
	return &NullableConsumerCreateRequestRootUser{value: val, isSet: true}
}

func (v NullableConsumerCreateRequestRootUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsumerCreateRequestRootUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


