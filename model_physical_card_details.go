/*
Weavr Multi Product API

Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for your customers.  # Authentication Each request to the Multi API must include an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `auth_token` that represents the user for whom the request is being executed. 

API version: 3.32.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weavr

import (
	"encoding/json"
)

// checks if the PhysicalCardDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PhysicalCardDetails{}

// PhysicalCardDetails struct for PhysicalCardDetails
type PhysicalCardDetails struct {
	// The unique reference indicating the configuration of the physical card. Example the card design.
	ProductReference interface{} `json:"productReference,omitempty"`
	CarrierType interface{} `json:"carrierType,omitempty"`
	// Indicates if the physical card is activated for physical usage such as with physical terminals.
	PendingActivation interface{} `json:"pendingActivation"`
	// Indicates if the physical card is blocked due to providing incorrect PINs.
	PinBlocked interface{} `json:"pinBlocked,omitempty"`
	ManufacturingState *ManufacturingState `json:"manufacturingState,omitempty"`
	Replacement *PhysicalCardDetailsReplacement `json:"replacement,omitempty"`
	DeliveryAddress *DeliveryAddress `json:"deliveryAddress,omitempty"`
	DeliveryMethod *DeliveryMethod `json:"deliveryMethod,omitempty"`
	// The delivery tracking code for tracking the physical card's delivery status.
	DeliveryTrackingCode interface{} `json:"deliveryTrackingCode,omitempty"`
	// The delivery tracking method for tracking the physical card's delivery status.
	DeliveryTrackingMethod interface{} `json:"deliveryTrackingMethod,omitempty"`
	// Line 2 of the 'name on card' field. For Physical cards, this field will be printed on the card. The maximum characters allowed will depend on the design chosen and will be provided to you by Weavr when setting up your plastic cards. This field is deprecated
	// Deprecated
	NameOnCardLine2 interface{} `json:"nameOnCardLine2,omitempty"`
}

// NewPhysicalCardDetails instantiates a new PhysicalCardDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhysicalCardDetails(pendingActivation interface{}) *PhysicalCardDetails {
	this := PhysicalCardDetails{}
	this.PendingActivation = pendingActivation
	return &this
}

// NewPhysicalCardDetailsWithDefaults instantiates a new PhysicalCardDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhysicalCardDetailsWithDefaults() *PhysicalCardDetails {
	this := PhysicalCardDetails{}
	return &this
}

// GetProductReference returns the ProductReference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhysicalCardDetails) GetProductReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ProductReference
}

// GetProductReferenceOk returns a tuple with the ProductReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhysicalCardDetails) GetProductReferenceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ProductReference) {
		return nil, false
	}
	return &o.ProductReference, true
}

// HasProductReference returns a boolean if a field has been set.
func (o *PhysicalCardDetails) HasProductReference() bool {
	if o != nil && IsNil(o.ProductReference) {
		return true
	}

	return false
}

// SetProductReference gets a reference to the given interface{} and assigns it to the ProductReference field.
func (o *PhysicalCardDetails) SetProductReference(v interface{}) {
	o.ProductReference = v
}

// GetCarrierType returns the CarrierType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhysicalCardDetails) GetCarrierType() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CarrierType
}

// GetCarrierTypeOk returns a tuple with the CarrierType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhysicalCardDetails) GetCarrierTypeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CarrierType) {
		return nil, false
	}
	return &o.CarrierType, true
}

// HasCarrierType returns a boolean if a field has been set.
func (o *PhysicalCardDetails) HasCarrierType() bool {
	if o != nil && IsNil(o.CarrierType) {
		return true
	}

	return false
}

// SetCarrierType gets a reference to the given interface{} and assigns it to the CarrierType field.
func (o *PhysicalCardDetails) SetCarrierType(v interface{}) {
	o.CarrierType = v
}

// GetPendingActivation returns the PendingActivation field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *PhysicalCardDetails) GetPendingActivation() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.PendingActivation
}

// GetPendingActivationOk returns a tuple with the PendingActivation field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhysicalCardDetails) GetPendingActivationOk() (*interface{}, bool) {
	if o == nil || IsNil(o.PendingActivation) {
		return nil, false
	}
	return &o.PendingActivation, true
}

// SetPendingActivation sets field value
func (o *PhysicalCardDetails) SetPendingActivation(v interface{}) {
	o.PendingActivation = v
}

// GetPinBlocked returns the PinBlocked field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhysicalCardDetails) GetPinBlocked() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.PinBlocked
}

// GetPinBlockedOk returns a tuple with the PinBlocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhysicalCardDetails) GetPinBlockedOk() (*interface{}, bool) {
	if o == nil || IsNil(o.PinBlocked) {
		return nil, false
	}
	return &o.PinBlocked, true
}

// HasPinBlocked returns a boolean if a field has been set.
func (o *PhysicalCardDetails) HasPinBlocked() bool {
	if o != nil && IsNil(o.PinBlocked) {
		return true
	}

	return false
}

// SetPinBlocked gets a reference to the given interface{} and assigns it to the PinBlocked field.
func (o *PhysicalCardDetails) SetPinBlocked(v interface{}) {
	o.PinBlocked = v
}

// GetManufacturingState returns the ManufacturingState field value if set, zero value otherwise.
func (o *PhysicalCardDetails) GetManufacturingState() ManufacturingState {
	if o == nil || IsNil(o.ManufacturingState) {
		var ret ManufacturingState
		return ret
	}
	return *o.ManufacturingState
}

// GetManufacturingStateOk returns a tuple with the ManufacturingState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhysicalCardDetails) GetManufacturingStateOk() (*ManufacturingState, bool) {
	if o == nil || IsNil(o.ManufacturingState) {
		return nil, false
	}
	return o.ManufacturingState, true
}

// HasManufacturingState returns a boolean if a field has been set.
func (o *PhysicalCardDetails) HasManufacturingState() bool {
	if o != nil && !IsNil(o.ManufacturingState) {
		return true
	}

	return false
}

// SetManufacturingState gets a reference to the given ManufacturingState and assigns it to the ManufacturingState field.
func (o *PhysicalCardDetails) SetManufacturingState(v ManufacturingState) {
	o.ManufacturingState = &v
}

// GetReplacement returns the Replacement field value if set, zero value otherwise.
func (o *PhysicalCardDetails) GetReplacement() PhysicalCardDetailsReplacement {
	if o == nil || IsNil(o.Replacement) {
		var ret PhysicalCardDetailsReplacement
		return ret
	}
	return *o.Replacement
}

// GetReplacementOk returns a tuple with the Replacement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhysicalCardDetails) GetReplacementOk() (*PhysicalCardDetailsReplacement, bool) {
	if o == nil || IsNil(o.Replacement) {
		return nil, false
	}
	return o.Replacement, true
}

// HasReplacement returns a boolean if a field has been set.
func (o *PhysicalCardDetails) HasReplacement() bool {
	if o != nil && !IsNil(o.Replacement) {
		return true
	}

	return false
}

// SetReplacement gets a reference to the given PhysicalCardDetailsReplacement and assigns it to the Replacement field.
func (o *PhysicalCardDetails) SetReplacement(v PhysicalCardDetailsReplacement) {
	o.Replacement = &v
}

// GetDeliveryAddress returns the DeliveryAddress field value if set, zero value otherwise.
func (o *PhysicalCardDetails) GetDeliveryAddress() DeliveryAddress {
	if o == nil || IsNil(o.DeliveryAddress) {
		var ret DeliveryAddress
		return ret
	}
	return *o.DeliveryAddress
}

// GetDeliveryAddressOk returns a tuple with the DeliveryAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhysicalCardDetails) GetDeliveryAddressOk() (*DeliveryAddress, bool) {
	if o == nil || IsNil(o.DeliveryAddress) {
		return nil, false
	}
	return o.DeliveryAddress, true
}

// HasDeliveryAddress returns a boolean if a field has been set.
func (o *PhysicalCardDetails) HasDeliveryAddress() bool {
	if o != nil && !IsNil(o.DeliveryAddress) {
		return true
	}

	return false
}

// SetDeliveryAddress gets a reference to the given DeliveryAddress and assigns it to the DeliveryAddress field.
func (o *PhysicalCardDetails) SetDeliveryAddress(v DeliveryAddress) {
	o.DeliveryAddress = &v
}

// GetDeliveryMethod returns the DeliveryMethod field value if set, zero value otherwise.
func (o *PhysicalCardDetails) GetDeliveryMethod() DeliveryMethod {
	if o == nil || IsNil(o.DeliveryMethod) {
		var ret DeliveryMethod
		return ret
	}
	return *o.DeliveryMethod
}

// GetDeliveryMethodOk returns a tuple with the DeliveryMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PhysicalCardDetails) GetDeliveryMethodOk() (*DeliveryMethod, bool) {
	if o == nil || IsNil(o.DeliveryMethod) {
		return nil, false
	}
	return o.DeliveryMethod, true
}

// HasDeliveryMethod returns a boolean if a field has been set.
func (o *PhysicalCardDetails) HasDeliveryMethod() bool {
	if o != nil && !IsNil(o.DeliveryMethod) {
		return true
	}

	return false
}

// SetDeliveryMethod gets a reference to the given DeliveryMethod and assigns it to the DeliveryMethod field.
func (o *PhysicalCardDetails) SetDeliveryMethod(v DeliveryMethod) {
	o.DeliveryMethod = &v
}

// GetDeliveryTrackingCode returns the DeliveryTrackingCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhysicalCardDetails) GetDeliveryTrackingCode() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.DeliveryTrackingCode
}

// GetDeliveryTrackingCodeOk returns a tuple with the DeliveryTrackingCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhysicalCardDetails) GetDeliveryTrackingCodeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.DeliveryTrackingCode) {
		return nil, false
	}
	return &o.DeliveryTrackingCode, true
}

// HasDeliveryTrackingCode returns a boolean if a field has been set.
func (o *PhysicalCardDetails) HasDeliveryTrackingCode() bool {
	if o != nil && IsNil(o.DeliveryTrackingCode) {
		return true
	}

	return false
}

// SetDeliveryTrackingCode gets a reference to the given interface{} and assigns it to the DeliveryTrackingCode field.
func (o *PhysicalCardDetails) SetDeliveryTrackingCode(v interface{}) {
	o.DeliveryTrackingCode = v
}

// GetDeliveryTrackingMethod returns the DeliveryTrackingMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhysicalCardDetails) GetDeliveryTrackingMethod() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.DeliveryTrackingMethod
}

// GetDeliveryTrackingMethodOk returns a tuple with the DeliveryTrackingMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhysicalCardDetails) GetDeliveryTrackingMethodOk() (*interface{}, bool) {
	if o == nil || IsNil(o.DeliveryTrackingMethod) {
		return nil, false
	}
	return &o.DeliveryTrackingMethod, true
}

// HasDeliveryTrackingMethod returns a boolean if a field has been set.
func (o *PhysicalCardDetails) HasDeliveryTrackingMethod() bool {
	if o != nil && IsNil(o.DeliveryTrackingMethod) {
		return true
	}

	return false
}

// SetDeliveryTrackingMethod gets a reference to the given interface{} and assigns it to the DeliveryTrackingMethod field.
func (o *PhysicalCardDetails) SetDeliveryTrackingMethod(v interface{}) {
	o.DeliveryTrackingMethod = v
}

// GetNameOnCardLine2 returns the NameOnCardLine2 field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *PhysicalCardDetails) GetNameOnCardLine2() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.NameOnCardLine2
}

// GetNameOnCardLine2Ok returns a tuple with the NameOnCardLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *PhysicalCardDetails) GetNameOnCardLine2Ok() (*interface{}, bool) {
	if o == nil || IsNil(o.NameOnCardLine2) {
		return nil, false
	}
	return &o.NameOnCardLine2, true
}

// HasNameOnCardLine2 returns a boolean if a field has been set.
func (o *PhysicalCardDetails) HasNameOnCardLine2() bool {
	if o != nil && IsNil(o.NameOnCardLine2) {
		return true
	}

	return false
}

// SetNameOnCardLine2 gets a reference to the given interface{} and assigns it to the NameOnCardLine2 field.
// Deprecated
func (o *PhysicalCardDetails) SetNameOnCardLine2(v interface{}) {
	o.NameOnCardLine2 = v
}

func (o PhysicalCardDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PhysicalCardDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ProductReference != nil {
		toSerialize["productReference"] = o.ProductReference
	}
	if o.CarrierType != nil {
		toSerialize["carrierType"] = o.CarrierType
	}
	if o.PendingActivation != nil {
		toSerialize["pendingActivation"] = o.PendingActivation
	}
	if o.PinBlocked != nil {
		toSerialize["pinBlocked"] = o.PinBlocked
	}
	if !IsNil(o.ManufacturingState) {
		toSerialize["manufacturingState"] = o.ManufacturingState
	}
	if !IsNil(o.Replacement) {
		toSerialize["replacement"] = o.Replacement
	}
	if !IsNil(o.DeliveryAddress) {
		toSerialize["deliveryAddress"] = o.DeliveryAddress
	}
	if !IsNil(o.DeliveryMethod) {
		toSerialize["deliveryMethod"] = o.DeliveryMethod
	}
	if o.DeliveryTrackingCode != nil {
		toSerialize["deliveryTrackingCode"] = o.DeliveryTrackingCode
	}
	if o.DeliveryTrackingMethod != nil {
		toSerialize["deliveryTrackingMethod"] = o.DeliveryTrackingMethod
	}
	if o.NameOnCardLine2 != nil {
		toSerialize["nameOnCardLine2"] = o.NameOnCardLine2
	}
	return toSerialize, nil
}

type NullablePhysicalCardDetails struct {
	value *PhysicalCardDetails
	isSet bool
}

func (v NullablePhysicalCardDetails) Get() *PhysicalCardDetails {
	return v.value
}

func (v *NullablePhysicalCardDetails) Set(val *PhysicalCardDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePhysicalCardDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePhysicalCardDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhysicalCardDetails(val *PhysicalCardDetails) *NullablePhysicalCardDetails {
	return &NullablePhysicalCardDetails{value: val, isSet: true}
}

func (v NullablePhysicalCardDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhysicalCardDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


