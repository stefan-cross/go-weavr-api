/*
Weavr Multi Product API

Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for your customers.  # Authentication Each request to the Multi API must include an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `auth_token` that represents the user for whom the request is being executed. 

API version: 3.32.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weavr

import (
	"encoding/json"
)

// checks if the FasterPaymentsBankDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FasterPaymentsBankDetails{}

// FasterPaymentsBankDetails Bank details used in case the wire transfer is executed over Faster Payments.
type FasterPaymentsBankDetails struct {
	// Account number, required for wire transfer over Faster Payments.
	AccountNumber interface{} `json:"accountNumber"`
	// Sort code, required for wire transfer over Faster Payments.
	SortCode interface{} `json:"sortCode"`
}

// NewFasterPaymentsBankDetails instantiates a new FasterPaymentsBankDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFasterPaymentsBankDetails(accountNumber interface{}, sortCode interface{}) *FasterPaymentsBankDetails {
	this := FasterPaymentsBankDetails{}
	this.AccountNumber = accountNumber
	this.SortCode = sortCode
	return &this
}

// NewFasterPaymentsBankDetailsWithDefaults instantiates a new FasterPaymentsBankDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFasterPaymentsBankDetailsWithDefaults() *FasterPaymentsBankDetails {
	this := FasterPaymentsBankDetails{}
	return &this
}

// GetAccountNumber returns the AccountNumber field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *FasterPaymentsBankDetails) GetAccountNumber() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FasterPaymentsBankDetails) GetAccountNumberOk() (*interface{}, bool) {
	if o == nil || IsNil(o.AccountNumber) {
		return nil, false
	}
	return &o.AccountNumber, true
}

// SetAccountNumber sets field value
func (o *FasterPaymentsBankDetails) SetAccountNumber(v interface{}) {
	o.AccountNumber = v
}

// GetSortCode returns the SortCode field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *FasterPaymentsBankDetails) GetSortCode() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.SortCode
}

// GetSortCodeOk returns a tuple with the SortCode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FasterPaymentsBankDetails) GetSortCodeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.SortCode) {
		return nil, false
	}
	return &o.SortCode, true
}

// SetSortCode sets field value
func (o *FasterPaymentsBankDetails) SetSortCode(v interface{}) {
	o.SortCode = v
}

func (o FasterPaymentsBankDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FasterPaymentsBankDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountNumber != nil {
		toSerialize["accountNumber"] = o.AccountNumber
	}
	if o.SortCode != nil {
		toSerialize["sortCode"] = o.SortCode
	}
	return toSerialize, nil
}

type NullableFasterPaymentsBankDetails struct {
	value *FasterPaymentsBankDetails
	isSet bool
}

func (v NullableFasterPaymentsBankDetails) Get() *FasterPaymentsBankDetails {
	return v.value
}

func (v *NullableFasterPaymentsBankDetails) Set(val *FasterPaymentsBankDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableFasterPaymentsBankDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableFasterPaymentsBankDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFasterPaymentsBankDetails(val *FasterPaymentsBankDetails) *NullableFasterPaymentsBankDetails {
	return &NullableFasterPaymentsBankDetails{value: val, isSet: true}
}

func (v NullableFasterPaymentsBankDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFasterPaymentsBankDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


