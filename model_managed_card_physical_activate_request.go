/*
Weavr Multi Product API

Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for your customers.  # Authentication Each request to the Multi API must include an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `auth_token` that represents the user for whom the request is being executed. 

API version: 3.32.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weavr

import (
	"encoding/json"
)

// checks if the ManagedCardPhysicalActivateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedCardPhysicalActivateRequest{}

// ManagedCardPhysicalActivateRequest struct for ManagedCardPhysicalActivateRequest
type ManagedCardPhysicalActivateRequest struct {
	// The code, set up when upgrading the card, that allows the physical card to be activated.
	ActivationCode interface{} `json:"activationCode"`
}

// NewManagedCardPhysicalActivateRequest instantiates a new ManagedCardPhysicalActivateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedCardPhysicalActivateRequest(activationCode interface{}) *ManagedCardPhysicalActivateRequest {
	this := ManagedCardPhysicalActivateRequest{}
	this.ActivationCode = activationCode
	return &this
}

// NewManagedCardPhysicalActivateRequestWithDefaults instantiates a new ManagedCardPhysicalActivateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedCardPhysicalActivateRequestWithDefaults() *ManagedCardPhysicalActivateRequest {
	this := ManagedCardPhysicalActivateRequest{}
	return &this
}

// GetActivationCode returns the ActivationCode field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ManagedCardPhysicalActivateRequest) GetActivationCode() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.ActivationCode
}

// GetActivationCodeOk returns a tuple with the ActivationCode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedCardPhysicalActivateRequest) GetActivationCodeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ActivationCode) {
		return nil, false
	}
	return &o.ActivationCode, true
}

// SetActivationCode sets field value
func (o *ManagedCardPhysicalActivateRequest) SetActivationCode(v interface{}) {
	o.ActivationCode = v
}

func (o ManagedCardPhysicalActivateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedCardPhysicalActivateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ActivationCode != nil {
		toSerialize["activationCode"] = o.ActivationCode
	}
	return toSerialize, nil
}

type NullableManagedCardPhysicalActivateRequest struct {
	value *ManagedCardPhysicalActivateRequest
	isSet bool
}

func (v NullableManagedCardPhysicalActivateRequest) Get() *ManagedCardPhysicalActivateRequest {
	return v.value
}

func (v *NullableManagedCardPhysicalActivateRequest) Set(val *ManagedCardPhysicalActivateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedCardPhysicalActivateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedCardPhysicalActivateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedCardPhysicalActivateRequest(val *ManagedCardPhysicalActivateRequest) *NullableManagedCardPhysicalActivateRequest {
	return &NullableManagedCardPhysicalActivateRequest{value: val, isSet: true}
}

func (v NullableManagedCardPhysicalActivateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedCardPhysicalActivateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


