/*
Weavr Multi Product API

Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for your customers.  # Authentication Each request to the Multi API must include an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `auth_token` that represents the user for whom the request is being executed. 

API version: 3.32.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weavr

import (
	"encoding/json"
)

// checks if the ConsumerUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConsumerUpdateRequest{}

// ConsumerUpdateRequest struct for ConsumerUpdateRequest
type ConsumerUpdateRequest struct {
	// The tag field is a custom field that can be used to search and filter.
	Tag interface{} `json:"tag,omitempty"`
	// The first name of the Consumer root user.
	Name interface{} `json:"name,omitempty"`
	// The last name of the Consumer root user.
	Surname interface{} `json:"surname,omitempty"`
	// E-mail Address of the user
	Email interface{} `json:"email,omitempty"`
	Mobile *Mobile `json:"mobile,omitempty"`
	// Date of birth of the consumer root user.
	DateOfBirth *Date `json:"dateOfBirth,omitempty"`
	// Address of the consumer root user.
	Address *AddressWithNoRequiredFields `json:"address,omitempty"`
	// The fee group which the consumer will be bound to. Do not specify this if you are not using fee groups.
	FeeGroup interface{} `json:"feeGroup,omitempty"`
	// The currency expressed in ISO-4217 code. Example: GBP, EUR, USD.
	BaseCurrency interface{} `json:"baseCurrency,omitempty"`
	// Deprecated
	Occupation *Occupation `json:"occupation,omitempty"`
	// Deprecated
	SourceOfFunds *ConsumerSourceOfFunds `json:"sourceOfFunds,omitempty"`
	// Description of source of funds in case `OTHER` was chosen.
	// Deprecated
	SourceOfFundsOther interface{} `json:"sourceOfFundsOther,omitempty"`
	// The place of birth of the consumer root user.
	PlaceOfBirth interface{} `json:"placeOfBirth,omitempty"`
	// Nationality of the user - using ISO 3166 alpha-2.
	Nationality interface{} `json:"nationality,omitempty"`
	ResetMobileCounter interface{} `json:"resetMobileCounter,omitempty"`
}

// NewConsumerUpdateRequest instantiates a new ConsumerUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsumerUpdateRequest() *ConsumerUpdateRequest {
	this := ConsumerUpdateRequest{}
	return &this
}

// NewConsumerUpdateRequestWithDefaults instantiates a new ConsumerUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsumerUpdateRequestWithDefaults() *ConsumerUpdateRequest {
	this := ConsumerUpdateRequest{}
	return &this
}

// GetTag returns the Tag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConsumerUpdateRequest) GetTag() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConsumerUpdateRequest) GetTagOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return &o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *ConsumerUpdateRequest) HasTag() bool {
	if o != nil && IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given interface{} and assigns it to the Tag field.
func (o *ConsumerUpdateRequest) SetTag(v interface{}) {
	o.Tag = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConsumerUpdateRequest) GetName() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConsumerUpdateRequest) GetNameOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return &o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ConsumerUpdateRequest) HasName() bool {
	if o != nil && IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given interface{} and assigns it to the Name field.
func (o *ConsumerUpdateRequest) SetName(v interface{}) {
	o.Name = v
}

// GetSurname returns the Surname field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConsumerUpdateRequest) GetSurname() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Surname
}

// GetSurnameOk returns a tuple with the Surname field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConsumerUpdateRequest) GetSurnameOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Surname) {
		return nil, false
	}
	return &o.Surname, true
}

// HasSurname returns a boolean if a field has been set.
func (o *ConsumerUpdateRequest) HasSurname() bool {
	if o != nil && IsNil(o.Surname) {
		return true
	}

	return false
}

// SetSurname gets a reference to the given interface{} and assigns it to the Surname field.
func (o *ConsumerUpdateRequest) SetSurname(v interface{}) {
	o.Surname = v
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConsumerUpdateRequest) GetEmail() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConsumerUpdateRequest) GetEmailOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return &o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ConsumerUpdateRequest) HasEmail() bool {
	if o != nil && IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given interface{} and assigns it to the Email field.
func (o *ConsumerUpdateRequest) SetEmail(v interface{}) {
	o.Email = v
}

// GetMobile returns the Mobile field value if set, zero value otherwise.
func (o *ConsumerUpdateRequest) GetMobile() Mobile {
	if o == nil || IsNil(o.Mobile) {
		var ret Mobile
		return ret
	}
	return *o.Mobile
}

// GetMobileOk returns a tuple with the Mobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumerUpdateRequest) GetMobileOk() (*Mobile, bool) {
	if o == nil || IsNil(o.Mobile) {
		return nil, false
	}
	return o.Mobile, true
}

// HasMobile returns a boolean if a field has been set.
func (o *ConsumerUpdateRequest) HasMobile() bool {
	if o != nil && !IsNil(o.Mobile) {
		return true
	}

	return false
}

// SetMobile gets a reference to the given Mobile and assigns it to the Mobile field.
func (o *ConsumerUpdateRequest) SetMobile(v Mobile) {
	o.Mobile = &v
}

// GetDateOfBirth returns the DateOfBirth field value if set, zero value otherwise.
func (o *ConsumerUpdateRequest) GetDateOfBirth() Date {
	if o == nil || IsNil(o.DateOfBirth) {
		var ret Date
		return ret
	}
	return *o.DateOfBirth
}

// GetDateOfBirthOk returns a tuple with the DateOfBirth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumerUpdateRequest) GetDateOfBirthOk() (*Date, bool) {
	if o == nil || IsNil(o.DateOfBirth) {
		return nil, false
	}
	return o.DateOfBirth, true
}

// HasDateOfBirth returns a boolean if a field has been set.
func (o *ConsumerUpdateRequest) HasDateOfBirth() bool {
	if o != nil && !IsNil(o.DateOfBirth) {
		return true
	}

	return false
}

// SetDateOfBirth gets a reference to the given Date and assigns it to the DateOfBirth field.
func (o *ConsumerUpdateRequest) SetDateOfBirth(v Date) {
	o.DateOfBirth = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *ConsumerUpdateRequest) GetAddress() AddressWithNoRequiredFields {
	if o == nil || IsNil(o.Address) {
		var ret AddressWithNoRequiredFields
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumerUpdateRequest) GetAddressOk() (*AddressWithNoRequiredFields, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *ConsumerUpdateRequest) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given AddressWithNoRequiredFields and assigns it to the Address field.
func (o *ConsumerUpdateRequest) SetAddress(v AddressWithNoRequiredFields) {
	o.Address = &v
}

// GetFeeGroup returns the FeeGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConsumerUpdateRequest) GetFeeGroup() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.FeeGroup
}

// GetFeeGroupOk returns a tuple with the FeeGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConsumerUpdateRequest) GetFeeGroupOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FeeGroup) {
		return nil, false
	}
	return &o.FeeGroup, true
}

// HasFeeGroup returns a boolean if a field has been set.
func (o *ConsumerUpdateRequest) HasFeeGroup() bool {
	if o != nil && IsNil(o.FeeGroup) {
		return true
	}

	return false
}

// SetFeeGroup gets a reference to the given interface{} and assigns it to the FeeGroup field.
func (o *ConsumerUpdateRequest) SetFeeGroup(v interface{}) {
	o.FeeGroup = v
}

// GetBaseCurrency returns the BaseCurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConsumerUpdateRequest) GetBaseCurrency() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.BaseCurrency
}

// GetBaseCurrencyOk returns a tuple with the BaseCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConsumerUpdateRequest) GetBaseCurrencyOk() (*interface{}, bool) {
	if o == nil || IsNil(o.BaseCurrency) {
		return nil, false
	}
	return &o.BaseCurrency, true
}

// HasBaseCurrency returns a boolean if a field has been set.
func (o *ConsumerUpdateRequest) HasBaseCurrency() bool {
	if o != nil && IsNil(o.BaseCurrency) {
		return true
	}

	return false
}

// SetBaseCurrency gets a reference to the given interface{} and assigns it to the BaseCurrency field.
func (o *ConsumerUpdateRequest) SetBaseCurrency(v interface{}) {
	o.BaseCurrency = v
}

// GetOccupation returns the Occupation field value if set, zero value otherwise.
// Deprecated
func (o *ConsumerUpdateRequest) GetOccupation() Occupation {
	if o == nil || IsNil(o.Occupation) {
		var ret Occupation
		return ret
	}
	return *o.Occupation
}

// GetOccupationOk returns a tuple with the Occupation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ConsumerUpdateRequest) GetOccupationOk() (*Occupation, bool) {
	if o == nil || IsNil(o.Occupation) {
		return nil, false
	}
	return o.Occupation, true
}

// HasOccupation returns a boolean if a field has been set.
func (o *ConsumerUpdateRequest) HasOccupation() bool {
	if o != nil && !IsNil(o.Occupation) {
		return true
	}

	return false
}

// SetOccupation gets a reference to the given Occupation and assigns it to the Occupation field.
// Deprecated
func (o *ConsumerUpdateRequest) SetOccupation(v Occupation) {
	o.Occupation = &v
}

// GetSourceOfFunds returns the SourceOfFunds field value if set, zero value otherwise.
// Deprecated
func (o *ConsumerUpdateRequest) GetSourceOfFunds() ConsumerSourceOfFunds {
	if o == nil || IsNil(o.SourceOfFunds) {
		var ret ConsumerSourceOfFunds
		return ret
	}
	return *o.SourceOfFunds
}

// GetSourceOfFundsOk returns a tuple with the SourceOfFunds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ConsumerUpdateRequest) GetSourceOfFundsOk() (*ConsumerSourceOfFunds, bool) {
	if o == nil || IsNil(o.SourceOfFunds) {
		return nil, false
	}
	return o.SourceOfFunds, true
}

// HasSourceOfFunds returns a boolean if a field has been set.
func (o *ConsumerUpdateRequest) HasSourceOfFunds() bool {
	if o != nil && !IsNil(o.SourceOfFunds) {
		return true
	}

	return false
}

// SetSourceOfFunds gets a reference to the given ConsumerSourceOfFunds and assigns it to the SourceOfFunds field.
// Deprecated
func (o *ConsumerUpdateRequest) SetSourceOfFunds(v ConsumerSourceOfFunds) {
	o.SourceOfFunds = &v
}

// GetSourceOfFundsOther returns the SourceOfFundsOther field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *ConsumerUpdateRequest) GetSourceOfFundsOther() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.SourceOfFundsOther
}

// GetSourceOfFundsOtherOk returns a tuple with the SourceOfFundsOther field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *ConsumerUpdateRequest) GetSourceOfFundsOtherOk() (*interface{}, bool) {
	if o == nil || IsNil(o.SourceOfFundsOther) {
		return nil, false
	}
	return &o.SourceOfFundsOther, true
}

// HasSourceOfFundsOther returns a boolean if a field has been set.
func (o *ConsumerUpdateRequest) HasSourceOfFundsOther() bool {
	if o != nil && IsNil(o.SourceOfFundsOther) {
		return true
	}

	return false
}

// SetSourceOfFundsOther gets a reference to the given interface{} and assigns it to the SourceOfFundsOther field.
// Deprecated
func (o *ConsumerUpdateRequest) SetSourceOfFundsOther(v interface{}) {
	o.SourceOfFundsOther = v
}

// GetPlaceOfBirth returns the PlaceOfBirth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConsumerUpdateRequest) GetPlaceOfBirth() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.PlaceOfBirth
}

// GetPlaceOfBirthOk returns a tuple with the PlaceOfBirth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConsumerUpdateRequest) GetPlaceOfBirthOk() (*interface{}, bool) {
	if o == nil || IsNil(o.PlaceOfBirth) {
		return nil, false
	}
	return &o.PlaceOfBirth, true
}

// HasPlaceOfBirth returns a boolean if a field has been set.
func (o *ConsumerUpdateRequest) HasPlaceOfBirth() bool {
	if o != nil && IsNil(o.PlaceOfBirth) {
		return true
	}

	return false
}

// SetPlaceOfBirth gets a reference to the given interface{} and assigns it to the PlaceOfBirth field.
func (o *ConsumerUpdateRequest) SetPlaceOfBirth(v interface{}) {
	o.PlaceOfBirth = v
}

// GetNationality returns the Nationality field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConsumerUpdateRequest) GetNationality() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Nationality
}

// GetNationalityOk returns a tuple with the Nationality field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConsumerUpdateRequest) GetNationalityOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Nationality) {
		return nil, false
	}
	return &o.Nationality, true
}

// HasNationality returns a boolean if a field has been set.
func (o *ConsumerUpdateRequest) HasNationality() bool {
	if o != nil && IsNil(o.Nationality) {
		return true
	}

	return false
}

// SetNationality gets a reference to the given interface{} and assigns it to the Nationality field.
func (o *ConsumerUpdateRequest) SetNationality(v interface{}) {
	o.Nationality = v
}

// GetResetMobileCounter returns the ResetMobileCounter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConsumerUpdateRequest) GetResetMobileCounter() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ResetMobileCounter
}

// GetResetMobileCounterOk returns a tuple with the ResetMobileCounter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConsumerUpdateRequest) GetResetMobileCounterOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ResetMobileCounter) {
		return nil, false
	}
	return &o.ResetMobileCounter, true
}

// HasResetMobileCounter returns a boolean if a field has been set.
func (o *ConsumerUpdateRequest) HasResetMobileCounter() bool {
	if o != nil && IsNil(o.ResetMobileCounter) {
		return true
	}

	return false
}

// SetResetMobileCounter gets a reference to the given interface{} and assigns it to the ResetMobileCounter field.
func (o *ConsumerUpdateRequest) SetResetMobileCounter(v interface{}) {
	o.ResetMobileCounter = v
}

func (o ConsumerUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConsumerUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Tag != nil {
		toSerialize["tag"] = o.Tag
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Surname != nil {
		toSerialize["surname"] = o.Surname
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Mobile) {
		toSerialize["mobile"] = o.Mobile
	}
	if !IsNil(o.DateOfBirth) {
		toSerialize["dateOfBirth"] = o.DateOfBirth
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if o.FeeGroup != nil {
		toSerialize["feeGroup"] = o.FeeGroup
	}
	if o.BaseCurrency != nil {
		toSerialize["baseCurrency"] = o.BaseCurrency
	}
	if !IsNil(o.Occupation) {
		toSerialize["occupation"] = o.Occupation
	}
	if !IsNil(o.SourceOfFunds) {
		toSerialize["sourceOfFunds"] = o.SourceOfFunds
	}
	if o.SourceOfFundsOther != nil {
		toSerialize["sourceOfFundsOther"] = o.SourceOfFundsOther
	}
	if o.PlaceOfBirth != nil {
		toSerialize["placeOfBirth"] = o.PlaceOfBirth
	}
	if o.Nationality != nil {
		toSerialize["nationality"] = o.Nationality
	}
	if o.ResetMobileCounter != nil {
		toSerialize["resetMobileCounter"] = o.ResetMobileCounter
	}
	return toSerialize, nil
}

type NullableConsumerUpdateRequest struct {
	value *ConsumerUpdateRequest
	isSet bool
}

func (v NullableConsumerUpdateRequest) Get() *ConsumerUpdateRequest {
	return v.value
}

func (v *NullableConsumerUpdateRequest) Set(val *ConsumerUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConsumerUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConsumerUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsumerUpdateRequest(val *ConsumerUpdateRequest) *NullableConsumerUpdateRequest {
	return &NullableConsumerUpdateRequest{value: val, isSet: true}
}

func (v NullableConsumerUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsumerUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


