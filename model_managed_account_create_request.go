/*
Weavr Multi Product API

Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for your customers.  # Authentication Each request to the Multi API must include an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `auth_token` that represents the user for whom the request is being executed. 

API version: 3.32.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weavr

import (
	"encoding/json"
)

// checks if the ManagedAccountCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedAccountCreateRequest{}

// ManagedAccountCreateRequest struct for ManagedAccountCreateRequest
type ManagedAccountCreateRequest struct {
	// The profile Id which a specific identity, instrument or transaction type is linked to.  Profiles contain configuration and determine behavioral aspects of the newly created transaction, for example, fees that may apply.  You can have one or more profiles linked to your application, and these can be used to drive different behaviors according to your product's needs.  Profile Ids can be found in the Multi Portal, in the API Credentials page. 
	ProfileId interface{} `json:"profileId"`
	// The friendly name to be given to the managed account.
	FriendlyName interface{} `json:"friendlyName"`
	// The currency expressed in ISO-4217 code. Example: GBP, EUR, USD.
	Currency interface{} `json:"currency"`
	// The tag field is a custom field that can be used to search and filter.
	Tag interface{} `json:"tag,omitempty"`
}

// NewManagedAccountCreateRequest instantiates a new ManagedAccountCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedAccountCreateRequest(profileId interface{}, friendlyName interface{}, currency interface{}) *ManagedAccountCreateRequest {
	this := ManagedAccountCreateRequest{}
	this.ProfileId = profileId
	this.FriendlyName = friendlyName
	this.Currency = currency
	return &this
}

// NewManagedAccountCreateRequestWithDefaults instantiates a new ManagedAccountCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedAccountCreateRequestWithDefaults() *ManagedAccountCreateRequest {
	this := ManagedAccountCreateRequest{}
	return &this
}

// GetProfileId returns the ProfileId field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ManagedAccountCreateRequest) GetProfileId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedAccountCreateRequest) GetProfileIdOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return &o.ProfileId, true
}

// SetProfileId sets field value
func (o *ManagedAccountCreateRequest) SetProfileId(v interface{}) {
	o.ProfileId = v
}

// GetFriendlyName returns the FriendlyName field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ManagedAccountCreateRequest) GetFriendlyName() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.FriendlyName
}

// GetFriendlyNameOk returns a tuple with the FriendlyName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedAccountCreateRequest) GetFriendlyNameOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FriendlyName) {
		return nil, false
	}
	return &o.FriendlyName, true
}

// SetFriendlyName sets field value
func (o *ManagedAccountCreateRequest) SetFriendlyName(v interface{}) {
	o.FriendlyName = v
}

// GetCurrency returns the Currency field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ManagedAccountCreateRequest) GetCurrency() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedAccountCreateRequest) GetCurrencyOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *ManagedAccountCreateRequest) SetCurrency(v interface{}) {
	o.Currency = v
}

// GetTag returns the Tag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedAccountCreateRequest) GetTag() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedAccountCreateRequest) GetTagOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return &o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *ManagedAccountCreateRequest) HasTag() bool {
	if o != nil && IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given interface{} and assigns it to the Tag field.
func (o *ManagedAccountCreateRequest) SetTag(v interface{}) {
	o.Tag = v
}

func (o ManagedAccountCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedAccountCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ProfileId != nil {
		toSerialize["profileId"] = o.ProfileId
	}
	if o.FriendlyName != nil {
		toSerialize["friendlyName"] = o.FriendlyName
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.Tag != nil {
		toSerialize["tag"] = o.Tag
	}
	return toSerialize, nil
}

type NullableManagedAccountCreateRequest struct {
	value *ManagedAccountCreateRequest
	isSet bool
}

func (v NullableManagedAccountCreateRequest) Get() *ManagedAccountCreateRequest {
	return v.value
}

func (v *NullableManagedAccountCreateRequest) Set(val *ManagedAccountCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedAccountCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedAccountCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedAccountCreateRequest(val *ManagedAccountCreateRequest) *NullableManagedAccountCreateRequest {
	return &NullableManagedAccountCreateRequest{value: val, isSet: true}
}

func (v NullableManagedAccountCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedAccountCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


