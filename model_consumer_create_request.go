/*
Weavr Multi Product API

Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for your customers.  # Authentication Each request to the Multi API must include an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `auth_token` that represents the user for whom the request is being executed. 

API version: 3.32.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weavr

import (
	"encoding/json"
)

// checks if the ConsumerCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConsumerCreateRequest{}

// ConsumerCreateRequest struct for ConsumerCreateRequest
type ConsumerCreateRequest struct {
	// The profile Id which a specific identity, instrument or transaction type is linked to.  Profiles contain configuration and determine behavioral aspects of the newly created transaction, for example, fees that may apply.  You can have one or more profiles linked to your application, and these can be used to drive different behaviors according to your product's needs.  Profile Ids can be found in the Multi Portal, in the API Credentials page. 
	ProfileId interface{} `json:"profileId"`
	// The tag field is a custom field that can be used to search and filter.
	Tag interface{} `json:"tag,omitempty"`
	RootUser ConsumerCreateRequestRootUser `json:"rootUser"`
	// The IP address of the user doing the registration.
	IpAddress interface{} `json:"ipAddress"`
	// Must be set to *true* to indicate that the consumer has accepted the terms and conditions.
	AcceptedTerms interface{} `json:"acceptedTerms"`
	// The currency expressed in ISO-4217 code. Example: GBP, EUR, USD.
	BaseCurrency interface{} `json:"baseCurrency,omitempty"`
	// The fee group which the consumer is bound to. Fee groups provide the possibility of different fees to users under the same profile. If fee groups are not required, ignore this field.
	FeeGroup interface{} `json:"feeGroup,omitempty"`
	// Deprecated
	SourceOfFunds *ConsumerSourceOfFunds `json:"sourceOfFunds,omitempty"`
	// Description of source of funds in case `OTHER` was chosen.
	// Deprecated
	SourceOfFundsOther interface{} `json:"sourceOfFundsOther,omitempty"`
}

// NewConsumerCreateRequest instantiates a new ConsumerCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsumerCreateRequest(profileId interface{}, rootUser ConsumerCreateRequestRootUser, ipAddress interface{}, acceptedTerms interface{}) *ConsumerCreateRequest {
	this := ConsumerCreateRequest{}
	this.ProfileId = profileId
	this.RootUser = rootUser
	this.IpAddress = ipAddress
	this.AcceptedTerms = acceptedTerms
	return &this
}

// NewConsumerCreateRequestWithDefaults instantiates a new ConsumerCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsumerCreateRequestWithDefaults() *ConsumerCreateRequest {
	this := ConsumerCreateRequest{}
	return &this
}

// GetProfileId returns the ProfileId field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ConsumerCreateRequest) GetProfileId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConsumerCreateRequest) GetProfileIdOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return &o.ProfileId, true
}

// SetProfileId sets field value
func (o *ConsumerCreateRequest) SetProfileId(v interface{}) {
	o.ProfileId = v
}

// GetTag returns the Tag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConsumerCreateRequest) GetTag() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConsumerCreateRequest) GetTagOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return &o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *ConsumerCreateRequest) HasTag() bool {
	if o != nil && IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given interface{} and assigns it to the Tag field.
func (o *ConsumerCreateRequest) SetTag(v interface{}) {
	o.Tag = v
}

// GetRootUser returns the RootUser field value
func (o *ConsumerCreateRequest) GetRootUser() ConsumerCreateRequestRootUser {
	if o == nil {
		var ret ConsumerCreateRequestRootUser
		return ret
	}

	return o.RootUser
}

// GetRootUserOk returns a tuple with the RootUser field value
// and a boolean to check if the value has been set.
func (o *ConsumerCreateRequest) GetRootUserOk() (*ConsumerCreateRequestRootUser, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RootUser, true
}

// SetRootUser sets field value
func (o *ConsumerCreateRequest) SetRootUser(v ConsumerCreateRequestRootUser) {
	o.RootUser = v
}

// GetIpAddress returns the IpAddress field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ConsumerCreateRequest) GetIpAddress() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConsumerCreateRequest) GetIpAddressOk() (*interface{}, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return &o.IpAddress, true
}

// SetIpAddress sets field value
func (o *ConsumerCreateRequest) SetIpAddress(v interface{}) {
	o.IpAddress = v
}

// GetAcceptedTerms returns the AcceptedTerms field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ConsumerCreateRequest) GetAcceptedTerms() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.AcceptedTerms
}

// GetAcceptedTermsOk returns a tuple with the AcceptedTerms field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConsumerCreateRequest) GetAcceptedTermsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.AcceptedTerms) {
		return nil, false
	}
	return &o.AcceptedTerms, true
}

// SetAcceptedTerms sets field value
func (o *ConsumerCreateRequest) SetAcceptedTerms(v interface{}) {
	o.AcceptedTerms = v
}

// GetBaseCurrency returns the BaseCurrency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConsumerCreateRequest) GetBaseCurrency() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.BaseCurrency
}

// GetBaseCurrencyOk returns a tuple with the BaseCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConsumerCreateRequest) GetBaseCurrencyOk() (*interface{}, bool) {
	if o == nil || IsNil(o.BaseCurrency) {
		return nil, false
	}
	return &o.BaseCurrency, true
}

// HasBaseCurrency returns a boolean if a field has been set.
func (o *ConsumerCreateRequest) HasBaseCurrency() bool {
	if o != nil && IsNil(o.BaseCurrency) {
		return true
	}

	return false
}

// SetBaseCurrency gets a reference to the given interface{} and assigns it to the BaseCurrency field.
func (o *ConsumerCreateRequest) SetBaseCurrency(v interface{}) {
	o.BaseCurrency = v
}

// GetFeeGroup returns the FeeGroup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConsumerCreateRequest) GetFeeGroup() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.FeeGroup
}

// GetFeeGroupOk returns a tuple with the FeeGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConsumerCreateRequest) GetFeeGroupOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FeeGroup) {
		return nil, false
	}
	return &o.FeeGroup, true
}

// HasFeeGroup returns a boolean if a field has been set.
func (o *ConsumerCreateRequest) HasFeeGroup() bool {
	if o != nil && IsNil(o.FeeGroup) {
		return true
	}

	return false
}

// SetFeeGroup gets a reference to the given interface{} and assigns it to the FeeGroup field.
func (o *ConsumerCreateRequest) SetFeeGroup(v interface{}) {
	o.FeeGroup = v
}

// GetSourceOfFunds returns the SourceOfFunds field value if set, zero value otherwise.
// Deprecated
func (o *ConsumerCreateRequest) GetSourceOfFunds() ConsumerSourceOfFunds {
	if o == nil || IsNil(o.SourceOfFunds) {
		var ret ConsumerSourceOfFunds
		return ret
	}
	return *o.SourceOfFunds
}

// GetSourceOfFundsOk returns a tuple with the SourceOfFunds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ConsumerCreateRequest) GetSourceOfFundsOk() (*ConsumerSourceOfFunds, bool) {
	if o == nil || IsNil(o.SourceOfFunds) {
		return nil, false
	}
	return o.SourceOfFunds, true
}

// HasSourceOfFunds returns a boolean if a field has been set.
func (o *ConsumerCreateRequest) HasSourceOfFunds() bool {
	if o != nil && !IsNil(o.SourceOfFunds) {
		return true
	}

	return false
}

// SetSourceOfFunds gets a reference to the given ConsumerSourceOfFunds and assigns it to the SourceOfFunds field.
// Deprecated
func (o *ConsumerCreateRequest) SetSourceOfFunds(v ConsumerSourceOfFunds) {
	o.SourceOfFunds = &v
}

// GetSourceOfFundsOther returns the SourceOfFundsOther field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *ConsumerCreateRequest) GetSourceOfFundsOther() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.SourceOfFundsOther
}

// GetSourceOfFundsOtherOk returns a tuple with the SourceOfFundsOther field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *ConsumerCreateRequest) GetSourceOfFundsOtherOk() (*interface{}, bool) {
	if o == nil || IsNil(o.SourceOfFundsOther) {
		return nil, false
	}
	return &o.SourceOfFundsOther, true
}

// HasSourceOfFundsOther returns a boolean if a field has been set.
func (o *ConsumerCreateRequest) HasSourceOfFundsOther() bool {
	if o != nil && IsNil(o.SourceOfFundsOther) {
		return true
	}

	return false
}

// SetSourceOfFundsOther gets a reference to the given interface{} and assigns it to the SourceOfFundsOther field.
// Deprecated
func (o *ConsumerCreateRequest) SetSourceOfFundsOther(v interface{}) {
	o.SourceOfFundsOther = v
}

func (o ConsumerCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConsumerCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ProfileId != nil {
		toSerialize["profileId"] = o.ProfileId
	}
	if o.Tag != nil {
		toSerialize["tag"] = o.Tag
	}
	toSerialize["rootUser"] = o.RootUser
	if o.IpAddress != nil {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if o.AcceptedTerms != nil {
		toSerialize["acceptedTerms"] = o.AcceptedTerms
	}
	if o.BaseCurrency != nil {
		toSerialize["baseCurrency"] = o.BaseCurrency
	}
	if o.FeeGroup != nil {
		toSerialize["feeGroup"] = o.FeeGroup
	}
	if !IsNil(o.SourceOfFunds) {
		toSerialize["sourceOfFunds"] = o.SourceOfFunds
	}
	if o.SourceOfFundsOther != nil {
		toSerialize["sourceOfFundsOther"] = o.SourceOfFundsOther
	}
	return toSerialize, nil
}

type NullableConsumerCreateRequest struct {
	value *ConsumerCreateRequest
	isSet bool
}

func (v NullableConsumerCreateRequest) Get() *ConsumerCreateRequest {
	return v.value
}

func (v *NullableConsumerCreateRequest) Set(val *ConsumerCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConsumerCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConsumerCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsumerCreateRequest(val *ConsumerCreateRequest) *NullableConsumerCreateRequest {
	return &NullableConsumerCreateRequest{value: val, isSet: true}
}

func (v NullableConsumerCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsumerCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


