/*
Weavr Multi Product API

Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for your customers.  # Authentication Each request to the Multi API must include an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `auth_token` that represents the user for whom the request is being executed. 

API version: 3.32.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weavr

import (
	"encoding/json"
)

// checks if the ManagedCardPhysicalUpgradeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedCardPhysicalUpgradeRequest{}

// ManagedCardPhysicalUpgradeRequest struct for ManagedCardPhysicalUpgradeRequest
type ManagedCardPhysicalUpgradeRequest struct {
	// The product design reference to be used for this physical card.  This reference will be given to you once your physical card programme has been set up. If only one card programme is configured, this field can be left empty. 
	ProductReference interface{} `json:"productReference,omitempty"`
	// The carrier type to be used for this physical card.  This reference will be given to you once your physical card carrier has been set up. If only one carrier is configured, this field can be left empty. 
	CarrierType interface{} `json:"carrierType,omitempty"`
	DeliveryMethod *DeliveryMethod `json:"deliveryMethod,omitempty"`
	DeliveryAddress DeliveryAddress `json:"deliveryAddress"`
	// The unique code to be used to activate the physical card.
	ActivationCode interface{} `json:"activationCode"`
	Pin *SensitivePin `json:"pin,omitempty"`
	// Line 2 of the 'name on card' field. For Physical cards, this field will be printed on the card. The maximum characters allowed will depend on the design chosen and will be provided to you by Weavr when setting up your plastic cards. This field is deprecated.
	// Deprecated
	NameOnCardLine2 interface{} `json:"nameOnCardLine2,omitempty"`
}

// NewManagedCardPhysicalUpgradeRequest instantiates a new ManagedCardPhysicalUpgradeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedCardPhysicalUpgradeRequest(deliveryAddress DeliveryAddress, activationCode interface{}) *ManagedCardPhysicalUpgradeRequest {
	this := ManagedCardPhysicalUpgradeRequest{}
	this.DeliveryAddress = deliveryAddress
	this.ActivationCode = activationCode
	return &this
}

// NewManagedCardPhysicalUpgradeRequestWithDefaults instantiates a new ManagedCardPhysicalUpgradeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedCardPhysicalUpgradeRequestWithDefaults() *ManagedCardPhysicalUpgradeRequest {
	this := ManagedCardPhysicalUpgradeRequest{}
	return &this
}

// GetProductReference returns the ProductReference field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedCardPhysicalUpgradeRequest) GetProductReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ProductReference
}

// GetProductReferenceOk returns a tuple with the ProductReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedCardPhysicalUpgradeRequest) GetProductReferenceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ProductReference) {
		return nil, false
	}
	return &o.ProductReference, true
}

// HasProductReference returns a boolean if a field has been set.
func (o *ManagedCardPhysicalUpgradeRequest) HasProductReference() bool {
	if o != nil && IsNil(o.ProductReference) {
		return true
	}

	return false
}

// SetProductReference gets a reference to the given interface{} and assigns it to the ProductReference field.
func (o *ManagedCardPhysicalUpgradeRequest) SetProductReference(v interface{}) {
	o.ProductReference = v
}

// GetCarrierType returns the CarrierType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedCardPhysicalUpgradeRequest) GetCarrierType() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CarrierType
}

// GetCarrierTypeOk returns a tuple with the CarrierType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedCardPhysicalUpgradeRequest) GetCarrierTypeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CarrierType) {
		return nil, false
	}
	return &o.CarrierType, true
}

// HasCarrierType returns a boolean if a field has been set.
func (o *ManagedCardPhysicalUpgradeRequest) HasCarrierType() bool {
	if o != nil && IsNil(o.CarrierType) {
		return true
	}

	return false
}

// SetCarrierType gets a reference to the given interface{} and assigns it to the CarrierType field.
func (o *ManagedCardPhysicalUpgradeRequest) SetCarrierType(v interface{}) {
	o.CarrierType = v
}

// GetDeliveryMethod returns the DeliveryMethod field value if set, zero value otherwise.
func (o *ManagedCardPhysicalUpgradeRequest) GetDeliveryMethod() DeliveryMethod {
	if o == nil || IsNil(o.DeliveryMethod) {
		var ret DeliveryMethod
		return ret
	}
	return *o.DeliveryMethod
}

// GetDeliveryMethodOk returns a tuple with the DeliveryMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedCardPhysicalUpgradeRequest) GetDeliveryMethodOk() (*DeliveryMethod, bool) {
	if o == nil || IsNil(o.DeliveryMethod) {
		return nil, false
	}
	return o.DeliveryMethod, true
}

// HasDeliveryMethod returns a boolean if a field has been set.
func (o *ManagedCardPhysicalUpgradeRequest) HasDeliveryMethod() bool {
	if o != nil && !IsNil(o.DeliveryMethod) {
		return true
	}

	return false
}

// SetDeliveryMethod gets a reference to the given DeliveryMethod and assigns it to the DeliveryMethod field.
func (o *ManagedCardPhysicalUpgradeRequest) SetDeliveryMethod(v DeliveryMethod) {
	o.DeliveryMethod = &v
}

// GetDeliveryAddress returns the DeliveryAddress field value
func (o *ManagedCardPhysicalUpgradeRequest) GetDeliveryAddress() DeliveryAddress {
	if o == nil {
		var ret DeliveryAddress
		return ret
	}

	return o.DeliveryAddress
}

// GetDeliveryAddressOk returns a tuple with the DeliveryAddress field value
// and a boolean to check if the value has been set.
func (o *ManagedCardPhysicalUpgradeRequest) GetDeliveryAddressOk() (*DeliveryAddress, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeliveryAddress, true
}

// SetDeliveryAddress sets field value
func (o *ManagedCardPhysicalUpgradeRequest) SetDeliveryAddress(v DeliveryAddress) {
	o.DeliveryAddress = v
}

// GetActivationCode returns the ActivationCode field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ManagedCardPhysicalUpgradeRequest) GetActivationCode() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.ActivationCode
}

// GetActivationCodeOk returns a tuple with the ActivationCode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedCardPhysicalUpgradeRequest) GetActivationCodeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ActivationCode) {
		return nil, false
	}
	return &o.ActivationCode, true
}

// SetActivationCode sets field value
func (o *ManagedCardPhysicalUpgradeRequest) SetActivationCode(v interface{}) {
	o.ActivationCode = v
}

// GetPin returns the Pin field value if set, zero value otherwise.
func (o *ManagedCardPhysicalUpgradeRequest) GetPin() SensitivePin {
	if o == nil || IsNil(o.Pin) {
		var ret SensitivePin
		return ret
	}
	return *o.Pin
}

// GetPinOk returns a tuple with the Pin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedCardPhysicalUpgradeRequest) GetPinOk() (*SensitivePin, bool) {
	if o == nil || IsNil(o.Pin) {
		return nil, false
	}
	return o.Pin, true
}

// HasPin returns a boolean if a field has been set.
func (o *ManagedCardPhysicalUpgradeRequest) HasPin() bool {
	if o != nil && !IsNil(o.Pin) {
		return true
	}

	return false
}

// SetPin gets a reference to the given SensitivePin and assigns it to the Pin field.
func (o *ManagedCardPhysicalUpgradeRequest) SetPin(v SensitivePin) {
	o.Pin = &v
}

// GetNameOnCardLine2 returns the NameOnCardLine2 field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *ManagedCardPhysicalUpgradeRequest) GetNameOnCardLine2() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.NameOnCardLine2
}

// GetNameOnCardLine2Ok returns a tuple with the NameOnCardLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *ManagedCardPhysicalUpgradeRequest) GetNameOnCardLine2Ok() (*interface{}, bool) {
	if o == nil || IsNil(o.NameOnCardLine2) {
		return nil, false
	}
	return &o.NameOnCardLine2, true
}

// HasNameOnCardLine2 returns a boolean if a field has been set.
func (o *ManagedCardPhysicalUpgradeRequest) HasNameOnCardLine2() bool {
	if o != nil && IsNil(o.NameOnCardLine2) {
		return true
	}

	return false
}

// SetNameOnCardLine2 gets a reference to the given interface{} and assigns it to the NameOnCardLine2 field.
// Deprecated
func (o *ManagedCardPhysicalUpgradeRequest) SetNameOnCardLine2(v interface{}) {
	o.NameOnCardLine2 = v
}

func (o ManagedCardPhysicalUpgradeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedCardPhysicalUpgradeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ProductReference != nil {
		toSerialize["productReference"] = o.ProductReference
	}
	if o.CarrierType != nil {
		toSerialize["carrierType"] = o.CarrierType
	}
	if !IsNil(o.DeliveryMethod) {
		toSerialize["deliveryMethod"] = o.DeliveryMethod
	}
	toSerialize["deliveryAddress"] = o.DeliveryAddress
	if o.ActivationCode != nil {
		toSerialize["activationCode"] = o.ActivationCode
	}
	if !IsNil(o.Pin) {
		toSerialize["pin"] = o.Pin
	}
	if o.NameOnCardLine2 != nil {
		toSerialize["nameOnCardLine2"] = o.NameOnCardLine2
	}
	return toSerialize, nil
}

type NullableManagedCardPhysicalUpgradeRequest struct {
	value *ManagedCardPhysicalUpgradeRequest
	isSet bool
}

func (v NullableManagedCardPhysicalUpgradeRequest) Get() *ManagedCardPhysicalUpgradeRequest {
	return v.value
}

func (v *NullableManagedCardPhysicalUpgradeRequest) Set(val *ManagedCardPhysicalUpgradeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedCardPhysicalUpgradeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedCardPhysicalUpgradeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedCardPhysicalUpgradeRequest(val *ManagedCardPhysicalUpgradeRequest) *NullableManagedCardPhysicalUpgradeRequest {
	return &NullableManagedCardPhysicalUpgradeRequest{value: val, isSet: true}
}

func (v NullableManagedCardPhysicalUpgradeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedCardPhysicalUpgradeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


