/*
Weavr Multi Product API

Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for your customers.  # Authentication Each request to the Multi API must include an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `auth_token` that represents the user for whom the request is being executed. 

API version: 3.32.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weavr

import (
	"encoding/json"
)

// checks if the OutgoingWireTransferCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutgoingWireTransferCreateRequest{}

// OutgoingWireTransferCreateRequest struct for OutgoingWireTransferCreateRequest
type OutgoingWireTransferCreateRequest struct {
	// The profile Id which a specific identity, instrument or transaction type is linked to.  Profiles contain configuration and determine behavioral aspects of the newly created transaction, for example, fees that may apply.  You can have one or more profiles linked to your application, and these can be used to drive different behaviors according to your product's needs.  Profile Ids can be found in the Multi Portal, in the API Credentials page. 
	ProfileId interface{} `json:"profileId"`
	// The tag field is a custom field that can be used to search and filter.
	Tag interface{} `json:"tag,omitempty"`
	SourceInstrument OutgoingWireTransferCreateRequestSourceInstrument `json:"sourceInstrument"`
	// The amount, in same currency as source and destination, that was transferred from the source.
	TransferAmount CurrencyAmount `json:"transferAmount"`
	// These details are passed to the beneficiary as the `reference` and the allowed length is dependent on the payment type:  `SEPA` and `SWIFT` <= `35` characters  `Faster Payments` <= `18` characters 
	Description interface{} `json:"description,omitempty"`
	DestinationBeneficiary OutgoingWireTransferBeneficiary `json:"destinationBeneficiary"`
}

// NewOutgoingWireTransferCreateRequest instantiates a new OutgoingWireTransferCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutgoingWireTransferCreateRequest(profileId interface{}, sourceInstrument OutgoingWireTransferCreateRequestSourceInstrument, transferAmount CurrencyAmount, destinationBeneficiary OutgoingWireTransferBeneficiary) *OutgoingWireTransferCreateRequest {
	this := OutgoingWireTransferCreateRequest{}
	this.ProfileId = profileId
	this.SourceInstrument = sourceInstrument
	this.TransferAmount = transferAmount
	this.DestinationBeneficiary = destinationBeneficiary
	return &this
}

// NewOutgoingWireTransferCreateRequestWithDefaults instantiates a new OutgoingWireTransferCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutgoingWireTransferCreateRequestWithDefaults() *OutgoingWireTransferCreateRequest {
	this := OutgoingWireTransferCreateRequest{}
	return &this
}

// GetProfileId returns the ProfileId field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *OutgoingWireTransferCreateRequest) GetProfileId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutgoingWireTransferCreateRequest) GetProfileIdOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return &o.ProfileId, true
}

// SetProfileId sets field value
func (o *OutgoingWireTransferCreateRequest) SetProfileId(v interface{}) {
	o.ProfileId = v
}

// GetTag returns the Tag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutgoingWireTransferCreateRequest) GetTag() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutgoingWireTransferCreateRequest) GetTagOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return &o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *OutgoingWireTransferCreateRequest) HasTag() bool {
	if o != nil && IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given interface{} and assigns it to the Tag field.
func (o *OutgoingWireTransferCreateRequest) SetTag(v interface{}) {
	o.Tag = v
}

// GetSourceInstrument returns the SourceInstrument field value
func (o *OutgoingWireTransferCreateRequest) GetSourceInstrument() OutgoingWireTransferCreateRequestSourceInstrument {
	if o == nil {
		var ret OutgoingWireTransferCreateRequestSourceInstrument
		return ret
	}

	return o.SourceInstrument
}

// GetSourceInstrumentOk returns a tuple with the SourceInstrument field value
// and a boolean to check if the value has been set.
func (o *OutgoingWireTransferCreateRequest) GetSourceInstrumentOk() (*OutgoingWireTransferCreateRequestSourceInstrument, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceInstrument, true
}

// SetSourceInstrument sets field value
func (o *OutgoingWireTransferCreateRequest) SetSourceInstrument(v OutgoingWireTransferCreateRequestSourceInstrument) {
	o.SourceInstrument = v
}

// GetTransferAmount returns the TransferAmount field value
func (o *OutgoingWireTransferCreateRequest) GetTransferAmount() CurrencyAmount {
	if o == nil {
		var ret CurrencyAmount
		return ret
	}

	return o.TransferAmount
}

// GetTransferAmountOk returns a tuple with the TransferAmount field value
// and a boolean to check if the value has been set.
func (o *OutgoingWireTransferCreateRequest) GetTransferAmountOk() (*CurrencyAmount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransferAmount, true
}

// SetTransferAmount sets field value
func (o *OutgoingWireTransferCreateRequest) SetTransferAmount(v CurrencyAmount) {
	o.TransferAmount = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutgoingWireTransferCreateRequest) GetDescription() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutgoingWireTransferCreateRequest) GetDescriptionOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return &o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OutgoingWireTransferCreateRequest) HasDescription() bool {
	if o != nil && IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given interface{} and assigns it to the Description field.
func (o *OutgoingWireTransferCreateRequest) SetDescription(v interface{}) {
	o.Description = v
}

// GetDestinationBeneficiary returns the DestinationBeneficiary field value
func (o *OutgoingWireTransferCreateRequest) GetDestinationBeneficiary() OutgoingWireTransferBeneficiary {
	if o == nil {
		var ret OutgoingWireTransferBeneficiary
		return ret
	}

	return o.DestinationBeneficiary
}

// GetDestinationBeneficiaryOk returns a tuple with the DestinationBeneficiary field value
// and a boolean to check if the value has been set.
func (o *OutgoingWireTransferCreateRequest) GetDestinationBeneficiaryOk() (*OutgoingWireTransferBeneficiary, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationBeneficiary, true
}

// SetDestinationBeneficiary sets field value
func (o *OutgoingWireTransferCreateRequest) SetDestinationBeneficiary(v OutgoingWireTransferBeneficiary) {
	o.DestinationBeneficiary = v
}

func (o OutgoingWireTransferCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutgoingWireTransferCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ProfileId != nil {
		toSerialize["profileId"] = o.ProfileId
	}
	if o.Tag != nil {
		toSerialize["tag"] = o.Tag
	}
	toSerialize["sourceInstrument"] = o.SourceInstrument
	toSerialize["transferAmount"] = o.TransferAmount
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	toSerialize["destinationBeneficiary"] = o.DestinationBeneficiary
	return toSerialize, nil
}

type NullableOutgoingWireTransferCreateRequest struct {
	value *OutgoingWireTransferCreateRequest
	isSet bool
}

func (v NullableOutgoingWireTransferCreateRequest) Get() *OutgoingWireTransferCreateRequest {
	return v.value
}

func (v *NullableOutgoingWireTransferCreateRequest) Set(val *OutgoingWireTransferCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOutgoingWireTransferCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOutgoingWireTransferCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutgoingWireTransferCreateRequest(val *OutgoingWireTransferCreateRequest) *NullableOutgoingWireTransferCreateRequest {
	return &NullableOutgoingWireTransferCreateRequest{value: val, isSet: true}
}

func (v NullableOutgoingWireTransferCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutgoingWireTransferCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


