/*
Weavr Multi Product API

Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for your customers.  # Authentication Each request to the Multi API must include an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `auth_token` that represents the user for whom the request is being executed. 

API version: 3.32.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weavr

import (
	"encoding/json"
)

// checks if the CorporateCreateRequestRootUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporateCreateRequestRootUser{}

// CorporateCreateRequestRootUser The root user needs to be a director or a legal representative of the corporate that is being onboarded - this user cannot be deactivated.  Root users need to verify their email address and mobile number, as well as complete KYC as part of the Corporate's due diligence process. 
type CorporateCreateRequestRootUser struct {
	// The first name of the root user.
	Name interface{} `json:"name"`
	// The last name of the root user.
	Surname interface{} `json:"surname"`
	// E-mail Address of the user
	Email interface{} `json:"email"`
	Mobile Mobile `json:"mobile"`
	CompanyPosition CompanyPosition `json:"companyPosition"`
	// Date of birth of the root user.
	DateOfBirth *Date `json:"dateOfBirth,omitempty"`
}

// NewCorporateCreateRequestRootUser instantiates a new CorporateCreateRequestRootUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporateCreateRequestRootUser(name interface{}, surname interface{}, email interface{}, mobile Mobile, companyPosition CompanyPosition) *CorporateCreateRequestRootUser {
	this := CorporateCreateRequestRootUser{}
	this.Name = name
	this.Surname = surname
	this.Email = email
	this.Mobile = mobile
	this.CompanyPosition = companyPosition
	return &this
}

// NewCorporateCreateRequestRootUserWithDefaults instantiates a new CorporateCreateRequestRootUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporateCreateRequestRootUserWithDefaults() *CorporateCreateRequestRootUser {
	this := CorporateCreateRequestRootUser{}
	return &this
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *CorporateCreateRequestRootUser) GetName() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorporateCreateRequestRootUser) GetNameOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CorporateCreateRequestRootUser) SetName(v interface{}) {
	o.Name = v
}

// GetSurname returns the Surname field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *CorporateCreateRequestRootUser) GetSurname() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Surname
}

// GetSurnameOk returns a tuple with the Surname field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorporateCreateRequestRootUser) GetSurnameOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Surname) {
		return nil, false
	}
	return &o.Surname, true
}

// SetSurname sets field value
func (o *CorporateCreateRequestRootUser) SetSurname(v interface{}) {
	o.Surname = v
}

// GetEmail returns the Email field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *CorporateCreateRequestRootUser) GetEmail() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorporateCreateRequestRootUser) GetEmailOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CorporateCreateRequestRootUser) SetEmail(v interface{}) {
	o.Email = v
}

// GetMobile returns the Mobile field value
func (o *CorporateCreateRequestRootUser) GetMobile() Mobile {
	if o == nil {
		var ret Mobile
		return ret
	}

	return o.Mobile
}

// GetMobileOk returns a tuple with the Mobile field value
// and a boolean to check if the value has been set.
func (o *CorporateCreateRequestRootUser) GetMobileOk() (*Mobile, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mobile, true
}

// SetMobile sets field value
func (o *CorporateCreateRequestRootUser) SetMobile(v Mobile) {
	o.Mobile = v
}

// GetCompanyPosition returns the CompanyPosition field value
func (o *CorporateCreateRequestRootUser) GetCompanyPosition() CompanyPosition {
	if o == nil {
		var ret CompanyPosition
		return ret
	}

	return o.CompanyPosition
}

// GetCompanyPositionOk returns a tuple with the CompanyPosition field value
// and a boolean to check if the value has been set.
func (o *CorporateCreateRequestRootUser) GetCompanyPositionOk() (*CompanyPosition, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompanyPosition, true
}

// SetCompanyPosition sets field value
func (o *CorporateCreateRequestRootUser) SetCompanyPosition(v CompanyPosition) {
	o.CompanyPosition = v
}

// GetDateOfBirth returns the DateOfBirth field value if set, zero value otherwise.
func (o *CorporateCreateRequestRootUser) GetDateOfBirth() Date {
	if o == nil || IsNil(o.DateOfBirth) {
		var ret Date
		return ret
	}
	return *o.DateOfBirth
}

// GetDateOfBirthOk returns a tuple with the DateOfBirth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporateCreateRequestRootUser) GetDateOfBirthOk() (*Date, bool) {
	if o == nil || IsNil(o.DateOfBirth) {
		return nil, false
	}
	return o.DateOfBirth, true
}

// HasDateOfBirth returns a boolean if a field has been set.
func (o *CorporateCreateRequestRootUser) HasDateOfBirth() bool {
	if o != nil && !IsNil(o.DateOfBirth) {
		return true
	}

	return false
}

// SetDateOfBirth gets a reference to the given Date and assigns it to the DateOfBirth field.
func (o *CorporateCreateRequestRootUser) SetDateOfBirth(v Date) {
	o.DateOfBirth = &v
}

func (o CorporateCreateRequestRootUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporateCreateRequestRootUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Surname != nil {
		toSerialize["surname"] = o.Surname
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	toSerialize["mobile"] = o.Mobile
	toSerialize["companyPosition"] = o.CompanyPosition
	if !IsNil(o.DateOfBirth) {
		toSerialize["dateOfBirth"] = o.DateOfBirth
	}
	return toSerialize, nil
}

type NullableCorporateCreateRequestRootUser struct {
	value *CorporateCreateRequestRootUser
	isSet bool
}

func (v NullableCorporateCreateRequestRootUser) Get() *CorporateCreateRequestRootUser {
	return v.value
}

func (v *NullableCorporateCreateRequestRootUser) Set(val *CorporateCreateRequestRootUser) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporateCreateRequestRootUser) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporateCreateRequestRootUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporateCreateRequestRootUser(val *CorporateCreateRequestRootUser) *NullableCorporateCreateRequestRootUser {
	return &NullableCorporateCreateRequestRootUser{value: val, isSet: true}
}

func (v NullableCorporateCreateRequestRootUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporateCreateRequestRootUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


