/*
Weavr Multi Product API

Weavr Multi API provides a simple and flexible way to issue cards and accounts to your customers.  By integrating Weavr Multi API in your application you can embed banking capabilities within your app and provide a seamless experience for your customers.  # Authentication Each request to the Multi API must include an `api_key` that represents your account. You can obtain an API Key by registering for a Multi account [here](https://portal.weavr.io).  Almost all endpoints require a secondary authentication token `auth_token` that represents the user for whom the request is being executed. 

API version: 3.32.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weavr

import (
	"encoding/json"
)

// checks if the ManagedCardAssignRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedCardAssignRequest{}

// ManagedCardAssignRequest struct for ManagedCardAssignRequest
type ManagedCardAssignRequest struct {
	// Unique code identifying a card.
	ExternalReference interface{} `json:"externalReference"`
	// The code to be used to activate the physical card. Depending on how the cards were created, this may be a code set upon creation, or it may be the same as the `externalReference`.
	ActivationCode interface{} `json:"activationCode"`
	// The friendly name given to the card.
	FriendlyName interface{} `json:"friendlyName"`
	// The card holderâ€™s name for the card. This may be verified by merchants when the card is used online. For Physical cards, this field will be printed on the card. The maximum characters allowed will depend on the design chosen and will be provided to you by Weavr when setting up your plastic cards.
	NameOnCard interface{} `json:"nameOnCard"`
	// Line 2 of the 'name on card' field. For Physical cards, this field will be printed on the card. The maximum characters allowed will depend on the design chosen and will be provided to you by Weavr when setting up your plastic cards.
	NameOnCardLine2 interface{} `json:"nameOnCardLine2,omitempty"`
	// The billing address set for the card holder, required for AVS checking.
	BillingAddress Address `json:"billingAddress"`
	// The mobile number including country code of the card holder, needed for 3DS challenge.
	CardholderMobileNumber interface{} `json:"cardholderMobileNumber,omitempty"`
	// Default decision for auth forwarding on timeout
	AuthForwardingDefaultTimeoutDecision interface{} `json:"authForwardingDefaultTimeoutDecision,omitempty"`
}

// NewManagedCardAssignRequest instantiates a new ManagedCardAssignRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedCardAssignRequest(externalReference interface{}, activationCode interface{}, friendlyName interface{}, nameOnCard interface{}, billingAddress Address) *ManagedCardAssignRequest {
	this := ManagedCardAssignRequest{}
	this.ExternalReference = externalReference
	this.ActivationCode = activationCode
	this.FriendlyName = friendlyName
	this.NameOnCard = nameOnCard
	this.BillingAddress = billingAddress
	return &this
}

// NewManagedCardAssignRequestWithDefaults instantiates a new ManagedCardAssignRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedCardAssignRequestWithDefaults() *ManagedCardAssignRequest {
	this := ManagedCardAssignRequest{}
	return &this
}

// GetExternalReference returns the ExternalReference field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ManagedCardAssignRequest) GetExternalReference() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.ExternalReference
}

// GetExternalReferenceOk returns a tuple with the ExternalReference field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedCardAssignRequest) GetExternalReferenceOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ExternalReference) {
		return nil, false
	}
	return &o.ExternalReference, true
}

// SetExternalReference sets field value
func (o *ManagedCardAssignRequest) SetExternalReference(v interface{}) {
	o.ExternalReference = v
}

// GetActivationCode returns the ActivationCode field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ManagedCardAssignRequest) GetActivationCode() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.ActivationCode
}

// GetActivationCodeOk returns a tuple with the ActivationCode field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedCardAssignRequest) GetActivationCodeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ActivationCode) {
		return nil, false
	}
	return &o.ActivationCode, true
}

// SetActivationCode sets field value
func (o *ManagedCardAssignRequest) SetActivationCode(v interface{}) {
	o.ActivationCode = v
}

// GetFriendlyName returns the FriendlyName field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ManagedCardAssignRequest) GetFriendlyName() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.FriendlyName
}

// GetFriendlyNameOk returns a tuple with the FriendlyName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedCardAssignRequest) GetFriendlyNameOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FriendlyName) {
		return nil, false
	}
	return &o.FriendlyName, true
}

// SetFriendlyName sets field value
func (o *ManagedCardAssignRequest) SetFriendlyName(v interface{}) {
	o.FriendlyName = v
}

// GetNameOnCard returns the NameOnCard field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *ManagedCardAssignRequest) GetNameOnCard() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.NameOnCard
}

// GetNameOnCardOk returns a tuple with the NameOnCard field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedCardAssignRequest) GetNameOnCardOk() (*interface{}, bool) {
	if o == nil || IsNil(o.NameOnCard) {
		return nil, false
	}
	return &o.NameOnCard, true
}

// SetNameOnCard sets field value
func (o *ManagedCardAssignRequest) SetNameOnCard(v interface{}) {
	o.NameOnCard = v
}

// GetNameOnCardLine2 returns the NameOnCardLine2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedCardAssignRequest) GetNameOnCardLine2() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.NameOnCardLine2
}

// GetNameOnCardLine2Ok returns a tuple with the NameOnCardLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedCardAssignRequest) GetNameOnCardLine2Ok() (*interface{}, bool) {
	if o == nil || IsNil(o.NameOnCardLine2) {
		return nil, false
	}
	return &o.NameOnCardLine2, true
}

// HasNameOnCardLine2 returns a boolean if a field has been set.
func (o *ManagedCardAssignRequest) HasNameOnCardLine2() bool {
	if o != nil && IsNil(o.NameOnCardLine2) {
		return true
	}

	return false
}

// SetNameOnCardLine2 gets a reference to the given interface{} and assigns it to the NameOnCardLine2 field.
func (o *ManagedCardAssignRequest) SetNameOnCardLine2(v interface{}) {
	o.NameOnCardLine2 = v
}

// GetBillingAddress returns the BillingAddress field value
func (o *ManagedCardAssignRequest) GetBillingAddress() Address {
	if o == nil {
		var ret Address
		return ret
	}

	return o.BillingAddress
}

// GetBillingAddressOk returns a tuple with the BillingAddress field value
// and a boolean to check if the value has been set.
func (o *ManagedCardAssignRequest) GetBillingAddressOk() (*Address, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingAddress, true
}

// SetBillingAddress sets field value
func (o *ManagedCardAssignRequest) SetBillingAddress(v Address) {
	o.BillingAddress = v
}

// GetCardholderMobileNumber returns the CardholderMobileNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedCardAssignRequest) GetCardholderMobileNumber() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CardholderMobileNumber
}

// GetCardholderMobileNumberOk returns a tuple with the CardholderMobileNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedCardAssignRequest) GetCardholderMobileNumberOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CardholderMobileNumber) {
		return nil, false
	}
	return &o.CardholderMobileNumber, true
}

// HasCardholderMobileNumber returns a boolean if a field has been set.
func (o *ManagedCardAssignRequest) HasCardholderMobileNumber() bool {
	if o != nil && IsNil(o.CardholderMobileNumber) {
		return true
	}

	return false
}

// SetCardholderMobileNumber gets a reference to the given interface{} and assigns it to the CardholderMobileNumber field.
func (o *ManagedCardAssignRequest) SetCardholderMobileNumber(v interface{}) {
	o.CardholderMobileNumber = v
}

// GetAuthForwardingDefaultTimeoutDecision returns the AuthForwardingDefaultTimeoutDecision field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ManagedCardAssignRequest) GetAuthForwardingDefaultTimeoutDecision() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.AuthForwardingDefaultTimeoutDecision
}

// GetAuthForwardingDefaultTimeoutDecisionOk returns a tuple with the AuthForwardingDefaultTimeoutDecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManagedCardAssignRequest) GetAuthForwardingDefaultTimeoutDecisionOk() (*interface{}, bool) {
	if o == nil || IsNil(o.AuthForwardingDefaultTimeoutDecision) {
		return nil, false
	}
	return &o.AuthForwardingDefaultTimeoutDecision, true
}

// HasAuthForwardingDefaultTimeoutDecision returns a boolean if a field has been set.
func (o *ManagedCardAssignRequest) HasAuthForwardingDefaultTimeoutDecision() bool {
	if o != nil && IsNil(o.AuthForwardingDefaultTimeoutDecision) {
		return true
	}

	return false
}

// SetAuthForwardingDefaultTimeoutDecision gets a reference to the given interface{} and assigns it to the AuthForwardingDefaultTimeoutDecision field.
func (o *ManagedCardAssignRequest) SetAuthForwardingDefaultTimeoutDecision(v interface{}) {
	o.AuthForwardingDefaultTimeoutDecision = v
}

func (o ManagedCardAssignRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedCardAssignRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ExternalReference != nil {
		toSerialize["externalReference"] = o.ExternalReference
	}
	if o.ActivationCode != nil {
		toSerialize["activationCode"] = o.ActivationCode
	}
	if o.FriendlyName != nil {
		toSerialize["friendlyName"] = o.FriendlyName
	}
	if o.NameOnCard != nil {
		toSerialize["nameOnCard"] = o.NameOnCard
	}
	if o.NameOnCardLine2 != nil {
		toSerialize["nameOnCardLine2"] = o.NameOnCardLine2
	}
	toSerialize["billingAddress"] = o.BillingAddress
	if o.CardholderMobileNumber != nil {
		toSerialize["cardholderMobileNumber"] = o.CardholderMobileNumber
	}
	if o.AuthForwardingDefaultTimeoutDecision != nil {
		toSerialize["authForwardingDefaultTimeoutDecision"] = o.AuthForwardingDefaultTimeoutDecision
	}
	return toSerialize, nil
}

type NullableManagedCardAssignRequest struct {
	value *ManagedCardAssignRequest
	isSet bool
}

func (v NullableManagedCardAssignRequest) Get() *ManagedCardAssignRequest {
	return v.value
}

func (v *NullableManagedCardAssignRequest) Set(val *ManagedCardAssignRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedCardAssignRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedCardAssignRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedCardAssignRequest(val *ManagedCardAssignRequest) *NullableManagedCardAssignRequest {
	return &NullableManagedCardAssignRequest{value: val, isSet: true}
}

func (v NullableManagedCardAssignRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedCardAssignRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


