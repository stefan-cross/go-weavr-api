/*
Weavr Multi Product API

Testing OutgoingWireTransfersApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package weavr

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_weavr_OutgoingWireTransfersApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test OutgoingWireTransfersApiService OutgoingWireTransferCreate", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		httpRes, err := apiClient.OutgoingWireTransfersApi.OutgoingWireTransferCreate(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OutgoingWireTransfersApiService OutgoingWireTransferGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id interface{}

		httpRes, err := apiClient.OutgoingWireTransfersApi.OutgoingWireTransferGet(context.Background(), id).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OutgoingWireTransfersApiService OutgoingWireTransferSCAChallenge", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id interface{}
		var channel SCAOtpChannel

		httpRes, err := apiClient.OutgoingWireTransfersApi.OutgoingWireTransferSCAChallenge(context.Background(), id, channel).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OutgoingWireTransfersApiService OutgoingWireTransferSCAChallengePush", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id interface{}
		var channel SCAPushChannel

		httpRes, err := apiClient.OutgoingWireTransfersApi.OutgoingWireTransferSCAChallengePush(context.Background(), id, channel).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OutgoingWireTransfersApiService OutgoingWireTransferSCAVerify", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id interface{}
		var channel SCAOtpChannel

		httpRes, err := apiClient.OutgoingWireTransfersApi.OutgoingWireTransferSCAVerify(context.Background(), id, channel).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OutgoingWireTransfersApiService OutgoingWireTransfersGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		httpRes, err := apiClient.OutgoingWireTransfersApi.OutgoingWireTransfersGet(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
